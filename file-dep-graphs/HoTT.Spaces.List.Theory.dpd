N: 94 "app_assoc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 95 "app_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 1 "decidable_exists_nat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 6 "decidable_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 5 "decidable_list_exists" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 55 "drop" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 54 "drop_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 53 "drop_1" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 49 "drop_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 51 "drop_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 52 "drop_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 91 "equiv_inlist_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 90 "fold_left_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 12 "fold_left_preserves" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 89 "fold_right_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 18 "for_all_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 16 "for_all_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 15 "for_all_list_map'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 14 "for_all_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 13 "for_all_list_map2'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 9 "for_all_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 64 "index_of" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 36 "inlist_filter" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 17 "inlist_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 4 "inlist_list_exists" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 87 "inlist_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 86 "inlist_map'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 81 "inlist_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 67 "inlist_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 19 "inlist_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 21 "inlist_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 11 "istrunc_for_all" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 10 "istrunc_for_all'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 56 "last_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 96 "length_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 92 "length_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 50 "length_drop" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 88 "length_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 82 "length_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 7 "length_list_sigma" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 39 "length_remove" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 20 "length_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 77 "length_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 78 "length_reverse_acc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 33 "length_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 27 "length_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 34 "length_seq_rev" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 28 "length_seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 44 "length_take" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 3 "list_exists_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 2 "list_exists_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 37 "list_filter" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 35 "list_filter_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 80 "list_map2_repeat_l" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 79 "list_map2_repeat_r" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 85 "list_map_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 83 "list_map_compose" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 84 "list_map_id" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 75 "list_map_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 76 "list_map_reverse_acc" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 93 "list_pentagon" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 8 "list_sigma" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 69 "nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 65 "nth'_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 62 "nth'_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 61 "nth'_list_map2" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 68 "nth'_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 60 "nth'_repeat" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 22 "nth'_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 58 "nth_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 57 "nth_last" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 63 "nth_list_map" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 70 "nth_lt" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 66 "nth_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 23 "nth_seq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 24 "nth_seq_rev" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 59 "path_list_nth'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 42 "remove" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 41 "remove_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 38 "remove_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 40 "remove_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 74 "reverse_acc_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 72 "reverse_app" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 73 "reverse_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 71 "reverse_reverse" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 29 "seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 30 "seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 32 "seq_rev_cons" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 26 "seq_rev_seq_rev'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 25 "seq_seq'" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 31 "seq_succ" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 48 "take" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 47 "take_0" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 43 "take_inlist" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 45 "take_length_leq" [body=yes, kind=cnst, prop=no, path="Theory", ];
N: 46 "take_nil" [body=yes, kind=cnst, prop=no, path="Theory", ];
E: 1 2 [weight=1, ];
E: 1 5 [weight=1, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 21 [weight=2, ];
E: 7 8 [weight=5, ];
E: 10 11 [weight=1, ];
E: 10 18 [weight=1, ];
E: 15 16 [weight=1, ];
E: 21 31 [weight=1, ];
E: 21 91 [weight=1, ];
E: 22 23 [weight=1, ];
E: 22 25 [weight=8, ];
E: 22 27 [weight=1, ];
E: 22 29 [weight=54, ];
E: 22 62 [weight=1, ];
E: 22 66 [weight=1, ];
E: 22 69 [weight=11, ];
E: 22 88 [weight=12, ];
E: 23 31 [weight=1, ];
E: 23 33 [weight=2, ];
E: 23 56 [weight=1, ];
E: 23 57 [weight=1, ];
E: 23 58 [weight=1, ];
E: 23 92 [weight=1, ];
E: 25 26 [weight=1, ];
E: 25 29 [weight=1, ];
E: 25 30 [weight=4, ];
E: 25 76 [weight=1, ];
E: 26 30 [weight=10, ];
E: 26 83 [weight=1, ];
E: 27 28 [weight=1, ];
E: 27 29 [weight=1, ];
E: 27 30 [weight=3, ];
E: 27 77 [weight=1, ];
E: 28 30 [weight=4, ];
E: 28 88 [weight=1, ];
E: 29 30 [weight=1, ];
E: 31 73 [weight=1, ];
E: 33 34 [weight=1, ];
E: 33 77 [weight=1, ];
E: 35 37 [weight=28, ];
E: 36 37 [weight=19, ];
E: 38 42 [weight=2, ];
E: 38 43 [weight=1, ];
E: 38 48 [weight=4, ];
E: 38 49 [weight=1, ];
E: 38 55 [weight=4, ];
E: 38 91 [weight=2, ];
E: 39 42 [weight=2, ];
E: 39 44 [weight=1, ];
E: 39 48 [weight=4, ];
E: 39 50 [weight=1, ];
E: 39 55 [weight=5, ];
E: 39 92 [weight=1, ];
E: 40 42 [weight=2, ];
E: 40 45 [weight=1, ];
E: 40 48 [weight=1, ];
E: 40 51 [weight=1, ];
E: 40 55 [weight=2, ];
E: 40 95 [weight=1, ];
E: 41 42 [weight=2, ];
E: 41 47 [weight=1, ];
E: 41 48 [weight=1, ];
E: 41 53 [weight=1, ];
E: 41 55 [weight=2, ];
E: 42 48 [weight=1, ];
E: 42 55 [weight=1, ];
E: 43 46 [weight=1, ];
E: 43 47 [weight=1, ];
E: 43 48 [weight=13, ];
E: 44 46 [weight=1, ];
E: 44 48 [weight=7, ];
E: 45 46 [weight=1, ];
E: 45 48 [weight=7, ];
E: 46 48 [weight=2, ];
E: 47 48 [weight=2, ];
E: 49 52 [weight=1, ];
E: 49 54 [weight=1, ];
E: 49 55 [weight=11, ];
E: 50 52 [weight=1, ];
E: 50 55 [weight=5, ];
E: 51 52 [weight=1, ];
E: 51 55 [weight=6, ];
E: 52 55 [weight=2, ];
E: 53 55 [weight=7, ];
E: 54 55 [weight=2, ];
E: 59 65 [weight=2, ];
E: 59 69 [weight=32, ];
E: 60 69 [weight=5, ];
E: 61 65 [weight=3, ];
E: 61 69 [weight=55, ];
E: 62 69 [weight=11, ];
E: 64 65 [weight=1, ];
E: 64 69 [weight=17, ];
E: 65 66 [weight=2, ];
E: 65 69 [weight=8, ];
E: 66 69 [weight=1, ];
E: 66 70 [weight=1, ];
E: 67 69 [weight=10, ];
E: 68 69 [weight=3, ];
E: 69 70 [weight=1, ];
E: 71 72 [weight=1, ];
E: 71 73 [weight=1, ];
E: 72 73 [weight=2, ];
E: 72 94 [weight=1, ];
E: 72 95 [weight=1, ];
E: 73 74 [weight=1, ];
E: 73 94 [weight=1, ];
E: 74 94 [weight=1, ];
E: 75 76 [weight=1, ];
E: 77 78 [weight=1, ];
E: 93 94 [weight=116, ];
