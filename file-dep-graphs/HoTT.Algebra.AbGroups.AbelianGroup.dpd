N: 52 "AbGroup_ind" [body=yes, kind=cnst, prop=yes, path="AbelianGroup", ];
N: 51 "AbGroup_rec" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 53 "AbGroup_rect" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 50 "AbGroup_sind" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 34 "QuotientAbGroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 9 "ab_cokernel" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 8 "ab_cokernel_embedding" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 7 "ab_cokernel_embedding_rec" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 42 "ab_comm" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 14 "ab_homo_negation" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 11 "ab_image_embedding" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 10 "ab_image_in_embedding" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 19 "ab_kernel" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 13 "ab_mul" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 12 "ab_mul_natural" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 41 "ab_neg_op" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 6 "ab_sum" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 5 "ab_sum_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 3 "ab_sum_plus" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 2 "ab_sum_sum" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 4 "ab_sum_zero" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 48 "abgroup_commutative" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 20 "abgroup_first_iso" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 49 "abgroup_group" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 21 "abgroup_image" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 37 "abgroup_subgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 23 "abgroup_trivial" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 40 "equiv_path_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 39 "equiv_path_abgroup_group" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 32 "equiv_quotient_abgroup_ump" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 24 "hasequivs_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 25 "hasmorext_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 30 "is01cat_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 29 "is01cat_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 28 "is0gpd_grouphomomorphism" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 26 "is1cat_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 27 "is2graph_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 47 "isabgroup_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 35 "isabgroup_quotient" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 38 "isabgroup_subgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 31 "isgraph_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 36 "isnormal_ab_subgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 22 "ispointedcat_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 46 "issig_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 43 "negate_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 1 "path_ab_sum" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 44 "plus_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 33 "quotient_abgroup_rec" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 18 "transport_abgrouphomomorphism_from_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 16 "transport_abgrouphomomorphism_to_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 17 "transport_iso_abgrouphomomorphism_from_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 15 "transport_iso_abgrouphomomorphism_to_const" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 45 "zero_abgroup" [body=yes, kind=cnst, prop=no, path="AbelianGroup", ];
N: 55 "AbGroup" [kind=inductive, prop=no, path="AbelianGroup", ];
N: 54 "Build_AbGroup" [kind=construct, prop=no, path="AbelianGroup", ];
E: 1 6 [weight=9, ];
E: 1 45 [weight=2, ];
E: 1 55 [weight=2, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 6 [weight=27, ];
E: 2 45 [weight=7, ];
E: 2 55 [weight=2, ];
E: 3 6 [weight=63, ];
E: 3 42 [weight=2, ];
E: 3 55 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 6 [weight=2, ];
E: 4 13 [weight=1, ];
E: 4 45 [weight=6, ];
E: 4 55 [weight=2, ];
E: 5 6 [weight=7, ];
E: 5 13 [weight=4, ];
E: 5 55 [weight=2, ];
E: 6 45 [weight=1, ];
E: 6 55 [weight=2, ];
E: 7 8 [weight=1, ];
E: 7 31 [weight=3, ];
E: 7 36 [weight=2, ];
E: 7 49 [weight=20, ];
E: 7 55 [weight=4, ];
E: 8 34 [weight=1, ];
E: 8 55 [weight=3, ];
E: 9 34 [weight=1, ];
E: 9 55 [weight=3, ];
E: 10 11 [weight=1, ];
E: 10 31 [weight=2, ];
E: 10 49 [weight=6, ];
E: 10 55 [weight=4, ];
E: 11 31 [weight=2, ];
E: 11 36 [weight=1, ];
E: 11 49 [weight=9, ];
E: 11 55 [weight=4, ];
E: 12 13 [weight=2, ];
E: 12 55 [weight=4, ];
E: 13 42 [weight=1, ];
E: 13 55 [weight=2, ];
E: 14 43 [weight=15, ];
E: 14 55 [weight=2, ];
E: 15 16 [weight=1, ];
E: 15 31 [weight=6, ];
E: 15 40 [weight=9, ];
E: 15 55 [weight=13, ];
E: 16 31 [weight=6, ];
E: 16 40 [weight=3, ];
E: 16 49 [weight=9, ];
E: 16 55 [weight=19, ];
E: 17 18 [weight=1, ];
E: 17 31 [weight=6, ];
E: 17 40 [weight=9, ];
E: 17 55 [weight=11, ];
E: 18 31 [weight=7, ];
E: 18 40 [weight=6, ];
E: 18 49 [weight=9, ];
E: 18 55 [weight=23, ];
E: 19 31 [weight=2, ];
E: 19 38 [weight=1, ];
E: 19 49 [weight=5, ];
E: 19 54 [weight=1, ];
E: 19 55 [weight=5, ];
E: 20 21 [weight=2, ];
E: 20 31 [weight=2, ];
E: 20 34 [weight=2, ];
E: 20 36 [weight=1, ];
E: 20 49 [weight=66, ];
E: 20 55 [weight=4, ];
E: 21 31 [weight=2, ];
E: 21 38 [weight=1, ];
E: 21 49 [weight=5, ];
E: 21 54 [weight=1, ];
E: 21 55 [weight=5, ];
E: 22 23 [weight=3, ];
E: 22 26 [weight=4, ];
E: 22 27 [weight=4, ];
E: 22 30 [weight=4, ];
E: 22 31 [weight=4, ];
E: 22 49 [weight=2, ];
E: 22 55 [weight=6, ];
E: 23 54 [weight=1, ];
E: 23 55 [weight=1, ];
E: 24 26 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 30 [weight=1, ];
E: 24 31 [weight=1, ];
E: 24 49 [weight=1, ];
E: 24 55 [weight=2, ];
E: 25 26 [weight=1, ];
E: 25 27 [weight=1, ];
E: 25 30 [weight=1, ];
E: 25 31 [weight=1, ];
E: 25 49 [weight=1, ];
E: 25 55 [weight=2, ];
E: 26 27 [weight=1, ];
E: 26 30 [weight=1, ];
E: 26 31 [weight=1, ];
E: 26 49 [weight=1, ];
E: 26 55 [weight=2, ];
E: 27 31 [weight=1, ];
E: 27 49 [weight=1, ];
E: 27 55 [weight=2, ];
E: 28 29 [weight=1, ];
E: 28 31 [weight=1, ];
E: 28 49 [weight=8, ];
E: 28 55 [weight=4, ];
E: 29 31 [weight=1, ];
E: 29 49 [weight=6, ];
E: 29 55 [weight=4, ];
E: 30 31 [weight=1, ];
E: 30 49 [weight=1, ];
E: 30 55 [weight=2, ];
E: 31 49 [weight=1, ];
E: 31 55 [weight=2, ];
E: 32 34 [weight=1, ];
E: 32 36 [weight=1, ];
E: 32 55 [weight=2, ];
E: 33 34 [weight=1, ];
E: 33 36 [weight=1, ];
E: 33 55 [weight=4, ];
E: 34 35 [weight=1, ];
E: 34 36 [weight=1, ];
E: 34 54 [weight=1, ];
E: 34 55 [weight=3, ];
E: 35 36 [weight=50, ];
E: 35 55 [weight=2, ];
E: 36 42 [weight=1, ];
E: 36 55 [weight=2, ];
E: 37 38 [weight=1, ];
E: 37 54 [weight=1, ];
E: 37 55 [weight=3, ];
E: 38 55 [weight=2, ];
E: 39 40 [weight=1, ];
E: 39 55 [weight=7, ];
E: 40 46 [weight=10, ];
E: 40 55 [weight=7, ];
E: 41 42 [weight=1, ];
E: 41 43 [weight=7, ];
E: 41 44 [weight=2, ];
E: 41 55 [weight=2, ];
E: 42 55 [weight=2, ];
E: 43 55 [weight=2, ];
E: 44 55 [weight=2, ];
E: 45 55 [weight=2, ];
E: 46 54 [weight=8, ];
E: 46 55 [weight=12, ];
E: 47 55 [weight=2, ];
E: 48 55 [weight=2, ];
E: 49 55 [weight=2, ];
E: 50 54 [weight=2, ];
E: 50 55 [weight=4, ];
E: 51 53 [weight=1, ];
E: 51 54 [weight=1, ];
E: 51 55 [weight=3, ];
E: 52 54 [weight=2, ];
E: 52 55 [weight=4, ];
E: 53 54 [weight=2, ];
E: 53 55 [weight=4, ];
