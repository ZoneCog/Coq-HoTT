N: 30 "Build_IsNormalSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 92 "Build_IsSubgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 76 "Build_Subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 42 "IsNormalSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 99 "IsSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 98 "IsSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 100 "IsSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 97 "IsSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 22 "IsTrivialSubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 37 "NormalSubgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 36 "NormalSubgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 38 "NormalSubgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 35 "NormalSubgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 81 "Subgroup_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 80 "Subgroup_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 82 "Subgroup_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 79 "Subgroup_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 27 "equiv_in_cosetL_in_cosetR_normalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 44 "equiv_in_cosetL_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 43 "equiv_in_cosetR_symm" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 28 "equiv_isnormal_conjugate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 59 "equiv_path_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 58 "equiv_path_subgroup'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 1 "equiv_subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 66 "equiv_subgroup_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 32 "equiv_symmetric_in_normalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 6 "functor_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 56 "in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 24 "in_cosetL_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 26 "in_cosetL_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 46 "in_cosetL_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 55 "in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 23 "in_cosetR_cong" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 25 "in_cosetR_inverse" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 45 "in_cosetR_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 63 "isembedding_subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 67 "isequiv_subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 54 "ishprop_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 53 "ishprop_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 29 "ishprop_isnormalsubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 85 "ishprop_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 57 "ishset_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 41 "isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 31 "isnormal_conjugate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 86 "issig_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 62 "issig_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 93 "issubgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 90 "issubgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 89 "issubgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 94 "issubgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 91 "issubgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 88 "issubgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 87 "issubgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 95 "issubgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 96 "issubgroup_predicate" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 21 "istrivialsubgroup_trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 60 "maximal_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 33 "normalsubgroup_isnormal" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 34 "normalsubgroup_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 2 "path_subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 3 "path_subgroup_generated_helper" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 52 "reflexive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 51 "reflexive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 11 "sgt_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 10 "sgt_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 9 "sgt_op'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 8 "subgroup_generated" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 7 "subgroup_generated_gen_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 14 "subgroup_generated_type_ind" [body=yes, kind=cnst, prop=yes, path="Subgroup", ];
N: 13 "subgroup_generated_type_rec" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 15 "subgroup_generated_type_rect" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 12 "subgroup_generated_type_sind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 65 "subgroup_group" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 74 "subgroup_in_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 73 "subgroup_in_inv'" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 70 "subgroup_in_inv_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 72 "subgroup_in_op" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 71 "subgroup_in_op_inv" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 69 "subgroup_in_op_l" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 68 "subgroup_in_op_r" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 75 "subgroup_in_unit" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 64 "subgroup_incl" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 20 "subgroup_intersection" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 77 "subgroup_issubgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 78 "subgroup_pred" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 5 "subgroup_product" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 4 "subgroup_product_ind" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 50 "symmetric_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 49 "symmetric_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 48 "transitive_in_cosetL" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 47 "transitive_in_cosetR" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 61 "trivial_subgroup" [body=yes, kind=cnst, prop=no, path="Subgroup", ];
N: 102 "IsSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 40 "NormalSubgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 84 "Subgroup" [kind=inductive, prop=no, path="Subgroup", ];
N: 19 "subgroup_generated_type" [kind=inductive, prop=no, path="Subgroup", ];
N: 101 "Build_IsSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 39 "Build_NormalSubgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 83 "Build_Subgroup" [kind=construct, prop=no, path="Subgroup", ];
N: 18 "sgt_in" [kind=construct, prop=no, path="Subgroup", ];
N: 17 "sgt_unit" [kind=construct, prop=no, path="Subgroup", ];
N: 16 "sgt_op" [kind=construct, prop=no, path="Subgroup", ];
E: 1 65 [weight=5, ];
E: 1 84 [weight=7, ];
E: 2 3 [weight=2, ];
E: 2 8 [weight=8, ];
E: 2 58 [weight=1, ];
E: 2 84 [weight=1, ];
E: 3 15 [weight=1, ];
E: 3 16 [weight=1, ];
E: 3 17 [weight=1, ];
E: 3 18 [weight=1, ];
E: 3 19 [weight=27, ];
E: 4 5 [weight=6, ];
E: 4 15 [weight=1, ];
E: 4 16 [weight=2, ];
E: 4 17 [weight=2, ];
E: 4 18 [weight=5, ];
E: 4 19 [weight=25, ];
E: 4 84 [weight=4, ];
E: 5 8 [weight=1, ];
E: 5 84 [weight=5, ];
E: 6 8 [weight=2, ];
E: 6 15 [weight=1, ];
E: 6 16 [weight=1, ];
E: 6 17 [weight=1, ];
E: 6 18 [weight=1, ];
E: 6 19 [weight=12, ];
E: 7 8 [weight=2, ];
E: 7 18 [weight=1, ];
E: 7 19 [weight=1, ];
E: 7 65 [weight=1, ];
E: 8 16 [weight=1, ];
E: 8 17 [weight=1, ];
E: 8 19 [weight=18, ];
E: 8 76 [weight=1, ];
E: 8 84 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 16 [weight=1, ];
E: 9 19 [weight=6, ];
E: 10 11 [weight=1, ];
E: 10 19 [weight=4, ];
E: 11 16 [weight=1, ];
E: 11 17 [weight=1, ];
E: 11 19 [weight=4, ];
E: 12 16 [weight=2, ];
E: 12 17 [weight=2, ];
E: 12 18 [weight=2, ];
E: 12 19 [weight=10, ];
E: 13 15 [weight=1, ];
E: 13 16 [weight=1, ];
E: 13 17 [weight=1, ];
E: 13 18 [weight=1, ];
E: 13 19 [weight=5, ];
E: 14 16 [weight=2, ];
E: 14 17 [weight=2, ];
E: 14 18 [weight=2, ];
E: 14 19 [weight=10, ];
E: 15 16 [weight=2, ];
E: 15 17 [weight=2, ];
E: 15 18 [weight=2, ];
E: 15 19 [weight=10, ];
E: 20 71 [weight=2, ];
E: 20 75 [weight=2, ];
E: 20 76 [weight=1, ];
E: 20 84 [weight=5, ];
E: 21 22 [weight=2, ];
E: 21 61 [weight=3, ];
E: 22 61 [weight=1, ];
E: 22 84 [weight=2, ];
E: 23 40 [weight=2, ];
E: 23 41 [weight=2, ];
E: 23 55 [weight=6, ];
E: 23 72 [weight=1, ];
E: 24 40 [weight=2, ];
E: 24 41 [weight=2, ];
E: 24 56 [weight=6, ];
E: 24 72 [weight=1, ];
E: 25 27 [weight=1, ];
E: 25 40 [weight=2, ];
E: 25 55 [weight=6, ];
E: 25 56 [weight=1, ];
E: 26 27 [weight=1, ];
E: 26 40 [weight=2, ];
E: 26 55 [weight=2, ];
E: 26 56 [weight=5, ];
E: 27 32 [weight=1, ];
E: 27 40 [weight=2, ];
E: 27 43 [weight=1, ];
E: 27 55 [weight=3, ];
E: 27 56 [weight=1, ];
E: 28 29 [weight=1, ];
E: 28 30 [weight=1, ];
E: 28 31 [weight=1, ];
E: 28 39 [weight=1, ];
E: 28 42 [weight=3, ];
E: 28 53 [weight=1, ];
E: 28 84 [weight=2, ];
E: 29 42 [weight=2, ];
E: 29 84 [weight=2, ];
E: 30 42 [weight=2, ];
E: 30 84 [weight=2, ];
E: 31 40 [weight=2, ];
E: 31 41 [weight=1, ];
E: 32 40 [weight=2, ];
E: 32 41 [weight=2, ];
E: 33 40 [weight=2, ];
E: 33 42 [weight=1, ];
E: 34 40 [weight=2, ];
E: 34 84 [weight=1, ];
E: 35 39 [weight=2, ];
E: 35 40 [weight=4, ];
E: 35 42 [weight=2, ];
E: 35 84 [weight=2, ];
E: 36 38 [weight=1, ];
E: 36 39 [weight=1, ];
E: 36 40 [weight=3, ];
E: 36 42 [weight=1, ];
E: 36 84 [weight=1, ];
E: 37 39 [weight=2, ];
E: 37 40 [weight=4, ];
E: 37 42 [weight=2, ];
E: 37 84 [weight=2, ];
E: 38 39 [weight=2, ];
E: 38 40 [weight=4, ];
E: 38 42 [weight=2, ];
E: 38 84 [weight=2, ];
E: 39 42 [weight=1, ];
E: 39 84 [weight=1, ];
E: 40 42 [weight=1, ];
E: 40 84 [weight=1, ];
E: 41 42 [weight=2, ];
E: 41 84 [weight=2, ];
E: 42 84 [weight=2, ];
E: 43 49 [weight=2, ];
E: 43 53 [weight=2, ];
E: 43 55 [weight=6, ];
E: 43 84 [weight=2, ];
E: 44 50 [weight=2, ];
E: 44 54 [weight=2, ];
E: 44 56 [weight=6, ];
E: 44 84 [weight=2, ];
E: 45 55 [weight=4, ];
E: 45 84 [weight=2, ];
E: 46 50 [weight=2, ];
E: 46 54 [weight=2, ];
E: 46 56 [weight=4, ];
E: 46 84 [weight=2, ];
E: 47 55 [weight=5, ];
E: 47 84 [weight=2, ];
E: 48 56 [weight=5, ];
E: 48 84 [weight=2, ];
E: 49 55 [weight=4, ];
E: 49 84 [weight=2, ];
E: 50 56 [weight=4, ];
E: 50 84 [weight=2, ];
E: 51 55 [weight=3, ];
E: 51 84 [weight=2, ];
E: 52 56 [weight=3, ];
E: 52 84 [weight=2, ];
E: 53 55 [weight=2, ];
E: 53 84 [weight=2, ];
E: 54 56 [weight=2, ];
E: 54 84 [weight=2, ];
E: 55 84 [weight=2, ];
E: 56 84 [weight=2, ];
E: 57 62 [weight=1, ];
E: 57 84 [weight=2, ];
E: 57 86 [weight=1, ];
E: 57 102 [weight=3, ];
E: 58 59 [weight=1, ];
E: 58 84 [weight=6, ];
E: 59 62 [weight=7, ];
E: 59 84 [weight=15, ];
E: 59 85 [weight=1, ];
E: 59 102 [weight=21, ];
E: 60 83 [weight=1, ];
E: 60 84 [weight=1, ];
E: 60 101 [weight=1, ];
E: 61 76 [weight=1, ];
E: 61 84 [weight=1, ];
E: 62 83 [weight=8, ];
E: 62 84 [weight=12, ];
E: 62 102 [weight=21, ];
E: 63 64 [weight=1, ];
E: 63 65 [weight=1, ];
E: 63 84 [weight=2, ];
E: 64 65 [weight=6, ];
E: 64 84 [weight=2, ];
E: 65 84 [weight=2, ];
E: 66 67 [weight=1, ];
E: 66 74 [weight=1, ];
E: 66 84 [weight=2, ];
E: 67 73 [weight=1, ];
E: 67 74 [weight=2, ];
E: 67 84 [weight=2, ];
E: 68 84 [weight=2, ];
E: 68 87 [weight=1, ];
E: 69 84 [weight=2, ];
E: 69 88 [weight=1, ];
E: 70 84 [weight=2, ];
E: 70 89 [weight=1, ];
E: 71 84 [weight=2, ];
E: 71 91 [weight=1, ];
E: 72 84 [weight=2, ];
E: 73 84 [weight=2, ];
E: 73 90 [weight=1, ];
E: 74 84 [weight=2, ];
E: 75 84 [weight=2, ];
E: 76 83 [weight=1, ];
E: 76 84 [weight=1, ];
E: 76 92 [weight=1, ];
E: 77 84 [weight=2, ];
E: 77 102 [weight=1, ];
E: 78 84 [weight=2, ];
E: 79 83 [weight=2, ];
E: 79 84 [weight=4, ];
E: 79 102 [weight=2, ];
E: 80 82 [weight=1, ];
E: 80 83 [weight=1, ];
E: 80 84 [weight=3, ];
E: 80 102 [weight=1, ];
E: 81 83 [weight=2, ];
E: 81 84 [weight=4, ];
E: 81 102 [weight=2, ];
E: 82 83 [weight=2, ];
E: 82 84 [weight=4, ];
E: 82 102 [weight=2, ];
E: 83 102 [weight=1, ];
E: 84 102 [weight=1, ];
E: 85 86 [weight=1, ];
E: 85 102 [weight=2, ];
E: 86 101 [weight=8, ];
E: 86 102 [weight=12, ];
E: 87 89 [weight=1, ];
E: 87 102 [weight=2, ];
E: 88 91 [weight=1, ];
E: 88 102 [weight=2, ];
E: 89 91 [weight=1, ];
E: 89 102 [weight=2, ];
E: 90 102 [weight=2, ];
E: 91 102 [weight=2, ];
E: 92 101 [weight=1, ];
E: 92 102 [weight=1, ];
E: 93 102 [weight=2, ];
E: 94 102 [weight=2, ];
E: 95 102 [weight=2, ];
E: 96 102 [weight=2, ];
E: 97 101 [weight=2, ];
E: 97 102 [weight=4, ];
E: 98 100 [weight=1, ];
E: 98 101 [weight=1, ];
E: 98 102 [weight=3, ];
E: 99 101 [weight=2, ];
E: 99 102 [weight=4, ];
E: 100 101 [weight=2, ];
E: 100 102 [weight=4, ];
