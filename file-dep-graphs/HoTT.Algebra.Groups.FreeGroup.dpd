N: 31 "FreeGroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 20 "FreeGroup_ind_homotopy" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 21 "FreeGroup_ind_hprop" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 22 "FreeGroup_ind_hprop'" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 25 "FreeGroup_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 23 "FreeGroup_rec_beta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 52 "Words" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 36 "associative_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 51 "change_sign" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 50 "change_sign_inv" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 12 "equiv_freegroup_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 10 "equiv_isfreegroupon_isequiv_precomp" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 13 "equiv_isfreegroupon_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 46 "freegroup_eta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 24 "freegroup_in" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 45 "freegroup_tau" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 47 "freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 2 "is0functor_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 1 "is1functor_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 6 "is_retraction" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 14 "isequiv_isfreegroupon_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 4 "isequiv_subgroup_incl_freegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 18 "isfreegroup_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 19 "isfreegroupon_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 17 "isfreegroupon_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 16 "isfreegroupon_rec_beta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 5 "isgenerated_isfreegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 9 "isgeneratedby" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 11 "ishprop_isfreegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 3 "iso_subgroup_incl_freegroupon" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 35 "leftidentity_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 33 "leftinverse_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 49 "map1" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 48 "map2" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 43 "monunit_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 37 "negate_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 15 "path_homomorphism_from_free_group" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 34 "rightidentity_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 32 "rightinverse_freegroup_type" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 44 "sgop_freegroup" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 8 "to_subgroup_generated" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 7 "to_subgroup_generated_beta" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 42 "word_change_sign" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 40 "word_change_sign_inv" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 41 "word_change_sign_ww" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 39 "word_concat_Vw" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 38 "word_concat_wV" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 30 "word_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 29 "words_rec" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 26 "words_rec_coh" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 28 "words_rec_cons" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
N: 27 "words_rec_pp" [body=yes, kind=cnst, prop=no, path="FreeGroup", ];
E: 1 2 [weight=10, ];
E: 1 20 [weight=3, ];
E: 1 24 [weight=3, ];
E: 1 31 [weight=16, ];
E: 2 24 [weight=1, ];
E: 2 25 [weight=1, ];
E: 2 31 [weight=4, ];
E: 3 4 [weight=1, ];
E: 4 5 [weight=1, ];
E: 5 6 [weight=1, ];
E: 5 8 [weight=4, ];
E: 5 9 [weight=1, ];
E: 6 7 [weight=1, ];
E: 6 8 [weight=5, ];
E: 6 15 [weight=1, ];
E: 7 8 [weight=1, ];
E: 7 16 [weight=1, ];
E: 8 17 [weight=1, ];
E: 10 11 [weight=1, ];
E: 10 13 [weight=1, ];
E: 12 13 [weight=1, ];
E: 12 19 [weight=1, ];
E: 12 24 [weight=1, ];
E: 12 31 [weight=2, ];
E: 13 14 [weight=1, ];
E: 13 17 [weight=1, ];
E: 14 15 [weight=1, ];
E: 14 16 [weight=2, ];
E: 14 17 [weight=6, ];
E: 16 17 [weight=1, ];
E: 18 19 [weight=1, ];
E: 18 24 [weight=1, ];
E: 18 31 [weight=2, ];
E: 19 20 [weight=1, ];
E: 19 24 [weight=15, ];
E: 19 25 [weight=10, ];
E: 19 31 [weight=32, ];
E: 19 48 [weight=5, ];
E: 19 49 [weight=5, ];
E: 19 52 [weight=15, ];
E: 20 21 [weight=1, ];
E: 20 24 [weight=4, ];
E: 20 31 [weight=48, ];
E: 20 37 [weight=3, ];
E: 21 22 [weight=1, ];
E: 21 24 [weight=11, ];
E: 21 31 [weight=40, ];
E: 21 37 [weight=2, ];
E: 21 43 [weight=2, ];
E: 21 44 [weight=3, ];
E: 21 46 [weight=6, ];
E: 21 52 [weight=1, ];
E: 22 31 [weight=5, ];
E: 22 46 [weight=2, ];
E: 22 48 [weight=7, ];
E: 22 49 [weight=7, ];
E: 22 52 [weight=23, ];
E: 23 24 [weight=2, ];
E: 23 25 [weight=2, ];
E: 23 31 [weight=2, ];
E: 24 31 [weight=1, ];
E: 24 46 [weight=1, ];
E: 24 47 [weight=2, ];
E: 24 52 [weight=2, ];
E: 25 26 [weight=29, ];
E: 25 27 [weight=1, ];
E: 25 29 [weight=29, ];
E: 25 31 [weight=24, ];
E: 25 48 [weight=104, ];
E: 25 49 [weight=104, ];
E: 25 52 [weight=378, ];
E: 26 27 [weight=4, ];
E: 26 29 [weight=58, ];
E: 26 48 [weight=2, ];
E: 26 49 [weight=2, ];
E: 26 51 [weight=21, ];
E: 26 52 [weight=16, ];
E: 27 28 [weight=2, ];
E: 27 29 [weight=38, ];
E: 27 30 [weight=9, ];
E: 27 52 [weight=8, ];
E: 28 29 [weight=9, ];
E: 28 30 [weight=6, ];
E: 28 52 [weight=2, ];
E: 29 30 [weight=2, ];
E: 29 52 [weight=2, ];
E: 31 32 [weight=1, ];
E: 31 33 [weight=1, ];
E: 31 34 [weight=1, ];
E: 31 35 [weight=1, ];
E: 31 36 [weight=1, ];
E: 31 37 [weight=2, ];
E: 31 43 [weight=3, ];
E: 31 44 [weight=4, ];
E: 31 47 [weight=6, ];
E: 31 48 [weight=1, ];
E: 31 49 [weight=1, ];
E: 31 52 [weight=3, ];
E: 32 37 [weight=5, ];
E: 32 38 [weight=1, ];
E: 32 43 [weight=5, ];
E: 32 44 [weight=5, ];
E: 32 47 [weight=23, ];
E: 32 48 [weight=12, ];
E: 32 49 [weight=12, ];
E: 32 52 [weight=37, ];
E: 33 37 [weight=5, ];
E: 33 39 [weight=1, ];
E: 33 43 [weight=5, ];
E: 33 44 [weight=5, ];
E: 33 47 [weight=23, ];
E: 33 48 [weight=12, ];
E: 33 49 [weight=12, ];
E: 33 52 [weight=37, ];
E: 34 43 [weight=5, ];
E: 34 44 [weight=5, ];
E: 34 47 [weight=17, ];
E: 34 48 [weight=19, ];
E: 34 49 [weight=19, ];
E: 34 52 [weight=59, ];
E: 35 43 [weight=5, ];
E: 35 44 [weight=5, ];
E: 35 47 [weight=18, ];
E: 35 48 [weight=14, ];
E: 35 49 [weight=14, ];
E: 35 52 [weight=43, ];
E: 36 44 [weight=50, ];
E: 36 47 [weight=70, ];
E: 36 48 [weight=93, ];
E: 36 49 [weight=93, ];
E: 36 52 [weight=285, ];
E: 37 40 [weight=1, ];
E: 37 41 [weight=4, ];
E: 37 42 [weight=84, ];
E: 37 45 [weight=1, ];
E: 37 46 [weight=19, ];
E: 37 47 [weight=14, ];
E: 37 48 [weight=7, ];
E: 37 49 [weight=7, ];
E: 37 51 [weight=14, ];
E: 37 52 [weight=35, ];
E: 38 39 [weight=1, ];
E: 38 40 [weight=1, ];
E: 38 42 [weight=4, ];
E: 38 43 [weight=2, ];
E: 38 46 [weight=2, ];
E: 38 47 [weight=4, ];
E: 38 52 [weight=3, ];
E: 39 42 [weight=16, ];
E: 39 43 [weight=8, ];
E: 39 45 [weight=1, ];
E: 39 46 [weight=14, ];
E: 39 47 [weight=19, ];
E: 39 50 [weight=1, ];
E: 39 51 [weight=17, ];
E: 39 52 [weight=2, ];
E: 40 42 [weight=4, ];
E: 40 50 [weight=1, ];
E: 40 51 [weight=30, ];
E: 40 52 [weight=4, ];
E: 41 42 [weight=6, ];
E: 41 51 [weight=11, ];
E: 41 52 [weight=6, ];
E: 42 51 [weight=1, ];
E: 42 52 [weight=3, ];
E: 43 46 [weight=1, ];
E: 43 47 [weight=1, ];
E: 44 45 [weight=6, ];
E: 44 46 [weight=79, ];
E: 44 47 [weight=51, ];
E: 44 48 [weight=53, ];
E: 44 49 [weight=53, ];
E: 44 51 [weight=52, ];
E: 44 52 [weight=283, ];
E: 45 46 [weight=2, ];
E: 45 47 [weight=1, ];
E: 45 48 [weight=7, ];
E: 45 49 [weight=7, ];
E: 45 51 [weight=3, ];
E: 45 52 [weight=28, ];
E: 46 47 [weight=1, ];
E: 46 48 [weight=5, ];
E: 46 49 [weight=5, ];
E: 46 52 [weight=18, ];
E: 47 48 [weight=1, ];
E: 47 49 [weight=1, ];
E: 47 52 [weight=3, ];
E: 48 52 [weight=8, ];
E: 49 51 [weight=1, ];
E: 49 52 [weight=8, ];
E: 50 51 [weight=4, ];
