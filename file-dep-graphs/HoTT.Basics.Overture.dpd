N: 14 "Asymmetric" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 93 "Compose" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 22 "Empty_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 21 "Empty_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 20 "Empty_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 32 "Funext" [body=no, kind=cnst, prop=no, path="Overture", ];
N: 16 "Irreflexive" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 7 "IsPointed" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 44 "IsTrunc_internal_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 43 "IsTrunc_internal_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 42 "IsTrunc_internal_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 41 "IsTrunc_unfolded" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 104 "PreOrder_Reflexive" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 103 "PreOrder_Transitive" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 112 "Reflexive" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 113 "Relation" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 110 "Symmetric" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 108 "Transitive" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 10 "Unit_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 9 "Unit_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 8 "Unit_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 74 "ap" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 67 "ap10" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 54 "ap10_equiv" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 66 "ap11" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 65 "apD" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 68 "apD10" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 13 "asymmetry" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 36 "center" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 17 "complement" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 92 "composeD" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 81 "concat" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 102 "const" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 35 "contr" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 77 "define_internal_paths_rew" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 75 "define_internal_paths_rew_r" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 59 "eisadj" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 61 "eisretr" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 60 "eissect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 56 "equiv_fun" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 62 "equiv_inv" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 55 "equiv_isequiv" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 38 "equiv_istrunc_unfold" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 117 "fst" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 1 "hfiber" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 78 "internal_paths_rew" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 76 "internal_paths_rew_r" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 83 "inverse" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 15 "irreflexivity" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 31 "isequiv_apD10" [body=no, kind=cnst, prop=no, path="Overture", ];
N: 39 "isequiv_istrunc_unfold" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 2 "ispointed_type" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 34 "istrunc_codomain_fam" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 33 "istrunc_fun" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 37 "istrunc_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 40 "istrunc_unfold" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 26 "nat_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 24 "nat_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 25 "nat_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 19 "not" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 125 "option_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 30 "path_forall" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 89 "paths_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 85 "paths_ind'" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 84 "paths_ind_r" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 88 "paths_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 87 "paths_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 6 "point" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 3 "pointed_type" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 73 "pointwise_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 72 "pointwise_paths_concat" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 114 "prod_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 115 "prod_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 99 "proj1" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 98 "proj2" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 86 "reflexive_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 71 "reflexive_pointwise_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 111 "reflexivity" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 96 "sig_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 95 "sig_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 97 "sig_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 116 "snd" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 120 "sum_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 121 "sum_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 18 "symmetric_neq" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 82 "symmetric_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 69 "symmetric_pointwise_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 109 "symmetry" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 80 "transitive_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 70 "transitive_pointwise_paths" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 107 "transitivity" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 79 "transport" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 50 "trunc_index_ind" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 49 "trunc_index_rec" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 48 "trunc_index_rect" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 94 "uncurry" [body=yes, kind=cnst, prop=no, path="Overture", ];
N: 23 "Empty" [kind=inductive, prop=no, path="Overture", ];
N: 58 "Equiv" [kind=inductive, prop=no, path="Overture", ];
N: 64 "IsEquiv" [kind=inductive, prop=no, path="Overture", ];
N: 47 "IsTrunc_internal" [kind=inductive, prop=no, path="Overture", ];
N: 106 "PreOrder" [kind=inductive, prop=no, path="Overture", ];
N: 12 "Unit" [kind=inductive, prop=no, path="Overture", ];
N: 29 "nat" [kind=inductive, prop=no, path="Overture", ];
N: 128 "option" [kind=inductive, prop=no, path="Overture", ];
N: 5 "pType" [kind=inductive, prop=no, path="Overture", ];
N: 91 "paths" [kind=inductive, prop=no, path="Overture", ];
N: 119 "prod" [kind=inductive, prop=no, path="Overture", ];
N: 101 "sig" [kind=inductive, prop=no, path="Overture", ];
N: 124 "sum" [kind=inductive, prop=no, path="Overture", ];
N: 53 "trunc_index" [kind=inductive, prop=no, path="Overture", ];
N: 57 "Build_Equiv" [kind=construct, prop=no, path="Overture", ];
N: 63 "Build_IsEquiv" [kind=construct, prop=no, path="Overture", ];
N: 46 "Build_Contr" [kind=construct, prop=no, path="Overture", ];
N: 105 "Build_PreOrder" [kind=construct, prop=no, path="Overture", ];
N: 11 "tt" [kind=construct, prop=no, path="Overture", ];
N: 28 "O" [kind=construct, prop=no, path="Overture", ];
N: 127 "Some" [kind=construct, prop=no, path="Overture", ];
N: 4 "Build_pType" [kind=construct, prop=no, path="Overture", ];
N: 90 "idpath" [kind=construct, prop=no, path="Overture", ];
N: 118 "pair" [kind=construct, prop=no, path="Overture", ];
N: 100 "exist" [kind=construct, prop=no, path="Overture", ];
N: 123 "inl" [kind=construct, prop=no, path="Overture", ];
N: 52 "minus_two" [kind=construct, prop=no, path="Overture", ];
N: 45 "istrunc_S" [kind=construct, prop=no, path="Overture", ];
N: 27 "S" [kind=construct, prop=no, path="Overture", ];
N: 126 "None" [kind=construct, prop=no, path="Overture", ];
N: 122 "inr" [kind=construct, prop=no, path="Overture", ];
N: 51 "trunc_S" [kind=construct, prop=no, path="Overture", ];
E: 1 91 [weight=1, ];
E: 1 101 [weight=1, ];
E: 2 5 [weight=2, ];
E: 2 7 [weight=1, ];
E: 3 5 [weight=2, ];
E: 4 7 [weight=1, ];
E: 5 7 [weight=1, ];
E: 6 7 [weight=2, ];
E: 8 10 [weight=1, ];
E: 8 11 [weight=1, ];
E: 8 12 [weight=2, ];
E: 9 12 [weight=3, ];
E: 10 11 [weight=2, ];
E: 10 12 [weight=5, ];
E: 13 14 [weight=2, ];
E: 13 17 [weight=1, ];
E: 13 113 [weight=2, ];
E: 14 17 [weight=1, ];
E: 14 113 [weight=2, ];
E: 15 16 [weight=2, ];
E: 15 17 [weight=1, ];
E: 15 112 [weight=1, ];
E: 15 113 [weight=2, ];
E: 16 17 [weight=1, ];
E: 16 112 [weight=1, ];
E: 16 113 [weight=2, ];
E: 17 19 [weight=1, ];
E: 17 113 [weight=3, ];
E: 18 19 [weight=3, ];
E: 18 83 [weight=1, ];
E: 18 91 [weight=4, ];
E: 19 23 [weight=1, ];
E: 20 22 [weight=1, ];
E: 20 23 [weight=2, ];
E: 21 23 [weight=3, ];
E: 22 23 [weight=5, ];
E: 24 27 [weight=2, ];
E: 24 28 [weight=2, ];
E: 24 29 [weight=8, ];
E: 25 27 [weight=2, ];
E: 25 28 [weight=2, ];
E: 25 29 [weight=8, ];
E: 26 27 [weight=2, ];
E: 26 28 [weight=2, ];
E: 26 29 [weight=8, ];
E: 30 31 [weight=1, ];
E: 30 32 [weight=2, ];
E: 30 73 [weight=1, ];
E: 30 91 [weight=1, ];
E: 31 32 [weight=1, ];
E: 31 64 [weight=1, ];
E: 31 68 [weight=1, ];
E: 31 73 [weight=1, ];
E: 31 91 [weight=1, ];
E: 33 34 [weight=2, ];
E: 33 35 [weight=1, ];
E: 33 40 [weight=1, ];
E: 33 47 [weight=5, ];
E: 33 51 [weight=2, ];
E: 33 52 [weight=1, ];
E: 33 53 [weight=4, ];
E: 34 36 [weight=1, ];
E: 34 47 [weight=6, ];
E: 34 51 [weight=1, ];
E: 34 52 [weight=1, ];
E: 34 53 [weight=4, ];
E: 34 91 [weight=2, ];
E: 35 36 [weight=1, ];
E: 35 40 [weight=1, ];
E: 35 47 [weight=2, ];
E: 35 52 [weight=3, ];
E: 35 91 [weight=1, ];
E: 36 40 [weight=1, ];
E: 36 47 [weight=2, ];
E: 36 52 [weight=3, ];
E: 37 40 [weight=1, ];
E: 37 47 [weight=3, ];
E: 37 51 [weight=3, ];
E: 37 53 [weight=2, ];
E: 37 91 [weight=1, ];
E: 38 39 [weight=1, ];
E: 38 40 [weight=1, ];
E: 38 41 [weight=2, ];
E: 38 47 [weight=2, ];
E: 38 53 [weight=2, ];
E: 38 57 [weight=1, ];
E: 38 58 [weight=1, ];
E: 39 40 [weight=25, ];
E: 39 41 [weight=44, ];
E: 39 45 [weight=17, ];
E: 39 46 [weight=19, ];
E: 39 47 [weight=39, ];
E: 39 51 [weight=19, ];
E: 39 52 [weight=21, ];
E: 39 53 [weight=17, ];
E: 39 63 [weight=1, ];
E: 39 64 [weight=1, ];
E: 39 73 [weight=3, ];
E: 39 74 [weight=3, ];
E: 39 90 [weight=12, ];
E: 39 91 [weight=20, ];
E: 39 101 [weight=4, ];
E: 40 41 [weight=2, ];
E: 40 47 [weight=4, ];
E: 40 53 [weight=3, ];
E: 40 91 [weight=3, ];
E: 40 100 [weight=1, ];
E: 41 47 [weight=1, ];
E: 41 53 [weight=3, ];
E: 41 91 [weight=2, ];
E: 41 101 [weight=1, ];
E: 42 44 [weight=1, ];
E: 42 45 [weight=1, ];
E: 42 46 [weight=1, ];
E: 42 47 [weight=3, ];
E: 42 51 [weight=1, ];
E: 42 52 [weight=1, ];
E: 42 53 [weight=3, ];
E: 42 91 [weight=3, ];
E: 43 47 [weight=6, ];
E: 43 51 [weight=2, ];
E: 43 52 [weight=2, ];
E: 43 53 [weight=7, ];
E: 43 91 [weight=7, ];
E: 44 45 [weight=2, ];
E: 44 46 [weight=2, ];
E: 44 47 [weight=8, ];
E: 44 51 [weight=2, ];
E: 44 52 [weight=2, ];
E: 44 53 [weight=7, ];
E: 44 91 [weight=7, ];
E: 45 51 [weight=1, ];
E: 45 52 [weight=1, ];
E: 45 53 [weight=1, ];
E: 45 91 [weight=2, ];
E: 46 51 [weight=1, ];
E: 46 52 [weight=1, ];
E: 46 53 [weight=1, ];
E: 46 91 [weight=2, ];
E: 47 51 [weight=1, ];
E: 47 52 [weight=1, ];
E: 47 53 [weight=1, ];
E: 47 91 [weight=2, ];
E: 48 50 [weight=1, ];
E: 48 51 [weight=1, ];
E: 48 52 [weight=1, ];
E: 48 53 [weight=3, ];
E: 49 53 [weight=6, ];
E: 50 51 [weight=2, ];
E: 50 52 [weight=2, ];
E: 50 53 [weight=8, ];
E: 54 56 [weight=3, ];
E: 54 58 [weight=7, ];
E: 54 67 [weight=1, ];
E: 54 73 [weight=1, ];
E: 54 74 [weight=1, ];
E: 54 91 [weight=2, ];
E: 55 58 [weight=2, ];
E: 55 64 [weight=1, ];
E: 56 58 [weight=2, ];
E: 57 64 [weight=1, ];
E: 58 64 [weight=1, ];
E: 59 64 [weight=2, ];
E: 59 74 [weight=1, ];
E: 59 91 [weight=2, ];
E: 60 64 [weight=2, ];
E: 60 73 [weight=1, ];
E: 61 64 [weight=2, ];
E: 61 73 [weight=1, ];
E: 62 64 [weight=2, ];
E: 63 73 [weight=2, ];
E: 63 74 [weight=1, ];
E: 63 91 [weight=2, ];
E: 64 73 [weight=2, ];
E: 64 74 [weight=1, ];
E: 64 91 [weight=2, ];
E: 65 79 [weight=3, ];
E: 65 90 [weight=2, ];
E: 65 91 [weight=5, ];
E: 66 90 [weight=1, ];
E: 66 91 [weight=9, ];
E: 67 68 [weight=1, ];
E: 67 73 [weight=1, ];
E: 67 91 [weight=2, ];
E: 68 73 [weight=1, ];
E: 68 90 [weight=1, ];
E: 68 91 [weight=4, ];
E: 69 73 [weight=4, ];
E: 69 83 [weight=1, ];
E: 69 110 [weight=2, ];
E: 70 72 [weight=1, ];
E: 70 73 [weight=2, ];
E: 70 108 [weight=2, ];
E: 71 73 [weight=3, ];
E: 71 90 [weight=1, ];
E: 71 112 [weight=2, ];
E: 72 73 [weight=5, ];
E: 72 81 [weight=1, ];
E: 73 91 [weight=1, ];
E: 74 90 [weight=1, ];
E: 74 91 [weight=5, ];
E: 75 76 [weight=1, ];
E: 75 91 [weight=2, ];
E: 76 91 [weight=3, ];
E: 77 78 [weight=1, ];
E: 77 91 [weight=2, ];
E: 78 91 [weight=3, ];
E: 79 91 [weight=3, ];
E: 80 81 [weight=1, ];
E: 80 91 [weight=1, ];
E: 80 108 [weight=1, ];
E: 81 90 [weight=1, ];
E: 81 91 [weight=11, ];
E: 82 83 [weight=1, ];
E: 82 91 [weight=1, ];
E: 82 110 [weight=1, ];
E: 83 90 [weight=1, ];
E: 83 91 [weight=5, ];
E: 84 90 [weight=4, ];
E: 84 91 [weight=7, ];
E: 85 90 [weight=2, ];
E: 85 91 [weight=5, ];
E: 86 90 [weight=1, ];
E: 86 91 [weight=1, ];
E: 86 112 [weight=1, ];
E: 87 89 [weight=1, ];
E: 87 90 [weight=1, ];
E: 87 91 [weight=2, ];
E: 88 91 [weight=3, ];
E: 89 90 [weight=2, ];
E: 89 91 [weight=5, ];
E: 94 119 [weight=2, ];
E: 95 101 [weight=2, ];
E: 96 100 [weight=2, ];
E: 96 101 [weight=4, ];
E: 97 100 [weight=2, ];
E: 97 101 [weight=4, ];
E: 98 101 [weight=2, ];
E: 99 101 [weight=2, ];
E: 103 106 [weight=2, ];
E: 103 108 [weight=1, ];
E: 103 113 [weight=2, ];
E: 104 106 [weight=2, ];
E: 104 112 [weight=1, ];
E: 104 113 [weight=2, ];
E: 105 108 [weight=1, ];
E: 105 112 [weight=1, ];
E: 105 113 [weight=1, ];
E: 106 108 [weight=1, ];
E: 106 112 [weight=1, ];
E: 106 113 [weight=1, ];
E: 107 108 [weight=2, ];
E: 107 113 [weight=2, ];
E: 108 113 [weight=2, ];
E: 109 110 [weight=2, ];
E: 109 113 [weight=2, ];
E: 110 113 [weight=2, ];
E: 111 112 [weight=2, ];
E: 111 113 [weight=2, ];
E: 112 113 [weight=2, ];
E: 114 118 [weight=2, ];
E: 114 119 [weight=4, ];
E: 115 118 [weight=2, ];
E: 115 119 [weight=4, ];
E: 116 119 [weight=2, ];
E: 117 119 [weight=2, ];
E: 120 122 [weight=2, ];
E: 120 123 [weight=2, ];
E: 120 124 [weight=5, ];
E: 121 122 [weight=2, ];
E: 121 123 [weight=2, ];
E: 121 124 [weight=5, ];
E: 125 126 [weight=2, ];
E: 125 127 [weight=2, ];
E: 125 128 [weight=5, ];
