N: 8 "IsComposite" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 35 "IsPrime_ind" [body=yes, kind=cnst, prop=yes, path="Division", ];
N: 34 "IsPrime_rec" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 36 "IsPrime_rect" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 33 "IsPrime_sind" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 45 "NatBezout" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 139 "NatDivides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 14 "Prime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 118 "antisymmetric_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 5 "decidable_iscomposite" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 26 "decidable_isprime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 81 "decidable_nat_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 117 "divides_divisor" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 61 "divides_l_nat_gcd_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 2 "exists_prime_divisor" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 6 "gt_1_iscomposite" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 32 "gt_one_isprime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 122 "gt_zero_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 7 "iscomposite" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 29 "ishprop_isprime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 114 "ishprop_nat_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 95 "isinj_nat_mul_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 94 "isinj_nat_mul_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 31 "isprime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 21 "isprime_11" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 20 "isprime_13" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 19 "isprime_17" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 18 "isprime_19" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 25 "isprime_2" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 24 "isprime_3" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 23 "isprime_5" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 22 "isprime_7" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 4 "isprime_iff_not_iscomposite" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 12 "isprime_prime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 30 "issig_IsPrime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 121 "leq_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 120 "lt_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 11 "lt_zero_prime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 39 "nat_bezout" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 42 "nat_bezout_comm" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 43 "nat_bezout_coprime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 40 "nat_bezout_pos" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 41 "nat_bezout_pos_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 44 "nat_bezout_refl_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 10 "nat_coprime_iff_not_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 101 "nat_div_cancel" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 78 "nat_div_cancel_mul_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 77 "nat_div_cancel_mul_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 93 "nat_div_dist" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 92 "nat_div_dist'" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 73 "nat_div_div_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 72 "nat_div_div_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 71 "nat_div_div_r'" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 100 "nat_div_lt" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 113 "nat_div_mod_helper_spec" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 112 "nat_div_mod_spec" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 111 "nat_div_mod_spec'" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 110 "nat_div_mod_spec''" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 115 "nat_div_mod_unique" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 116 "nat_div_mod_unique_helper" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 97 "nat_div_mul_add_cancel_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 96 "nat_div_mul_add_cancel_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 99 "nat_div_mul_cancel_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 98 "nat_div_mul_cancel_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 76 "nat_div_mul_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 75 "nat_div_mul_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 102 "nat_div_one_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 88 "nat_div_strictly_monotone_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 74 "nat_div_sub_mod" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 106 "nat_div_unique" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 104 "nat_div_zero_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 103 "nat_div_zero_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 138 "nat_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 126 "nat_divides_add" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 124 "nat_divides_add_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 125 "nat_divides_add_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 119 "nat_divides_antisym" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 63 "nat_divides_l_gcd" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 62 "nat_divides_l_gcd_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 129 "nat_divides_mul_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 131 "nat_divides_mul_l'" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 127 "nat_divides_mul_monotone" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 128 "nat_divides_mul_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 130 "nat_divides_mul_r'" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 136 "nat_divides_one_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 9 "nat_divides_prime_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 60 "nat_divides_r_gcd" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 59 "nat_divides_r_iff_divides_r_gcd" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 135 "nat_divides_refl" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 123 "nat_divides_sub" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 79 "nat_divides_sub_mod" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 133 "nat_divides_trans" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 137 "nat_divides_zero_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 56 "nat_gcd_assoc" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 57 "nat_gcd_comm" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 64 "nat_gcd_idem" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 55 "nat_gcd_is_zero_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 54 "nat_gcd_is_zero_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 49 "nat_gcd_l_add_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 51 "nat_gcd_l_add_r_mul" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 47 "nat_gcd_l_sub" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 66 "nat_gcd_one_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 65 "nat_gcd_one_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 52 "nat_gcd_pos" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 48 "nat_gcd_r_add_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 50 "nat_gcd_r_add_r_mul" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 46 "nat_gcd_r_sub" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 58 "nat_gcd_unique" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 53 "nat_gcd_zero_iff_zero" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 68 "nat_gcd_zero_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 67 "nat_gcd_zero_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 91 "nat_leq_mul_div_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 80 "nat_mod_cancel" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 83 "nat_mod_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 82 "nat_mod_iff_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 107 "nat_mod_leq_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 108 "nat_mod_lt_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 109 "nat_mod_lt_r'" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 70 "nat_mod_mul_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 69 "nat_mod_mul_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 85 "nat_mod_one_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 84 "nat_mod_one_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 105 "nat_mod_unique" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 87 "nat_mod_zero_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 86 "nat_mod_zero_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 89 "nat_mul_div_cancel_l" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 90 "nat_mul_div_cancel_r" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 13 "nat_of_prime" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 17 "not_isprime_0" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 16 "not_isprime_1" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 15 "not_isprime_4" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 3 "not_isprime_iff_iscomposite" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 27 "not_isprime_one" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 28 "not_isprime_zero" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 1 "prime_factorization" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 134 "reflexive_nat_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 132 "transitive_nat_divides" [body=yes, kind=cnst, prop=no, path="Division", ];
N: 38 "IsPrime" [kind=inductive, prop=no, path="Division", ];
N: 37 "Build_IsPrime" [kind=construct, prop=no, path="Division", ];
E: 1 2 [weight=1, ];
E: 1 12 [weight=1, ];
E: 1 13 [weight=53, ];
E: 1 14 [weight=84, ];
E: 1 117 [weight=1, ];
E: 1 120 [weight=1, ];
E: 1 139 [weight=2, ];
E: 2 3 [weight=1, ];
E: 2 8 [weight=2, ];
E: 2 13 [weight=11, ];
E: 2 14 [weight=19, ];
E: 2 26 [weight=1, ];
E: 2 38 [weight=11, ];
E: 2 133 [weight=1, ];
E: 2 135 [weight=1, ];
E: 2 139 [weight=12, ];
E: 3 4 [weight=1, ];
E: 3 5 [weight=1, ];
E: 3 6 [weight=1, ];
E: 3 8 [weight=36, ];
E: 3 38 [weight=5, ];
E: 4 8 [weight=14, ];
E: 4 37 [weight=1, ];
E: 4 38 [weight=6, ];
E: 4 99 [weight=1, ];
E: 4 101 [weight=1, ];
E: 4 117 [weight=2, ];
E: 4 121 [weight=1, ];
E: 4 139 [weight=6, ];
E: 5 8 [weight=2, ];
E: 5 81 [weight=1, ];
E: 5 139 [weight=3, ];
E: 6 8 [weight=2, ];
E: 6 139 [weight=2, ];
E: 7 8 [weight=2, ];
E: 7 139 [weight=1, ];
E: 8 139 [weight=1, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 13 [weight=68, ];
E: 9 14 [weight=4, ];
E: 9 41 [weight=1, ];
E: 9 81 [weight=1, ];
E: 9 139 [weight=19, ];
E: 10 12 [weight=2, ];
E: 10 13 [weight=38, ];
E: 10 14 [weight=2, ];
E: 10 50 [weight=1, ];
E: 10 58 [weight=1, ];
E: 10 67 [weight=1, ];
E: 10 135 [weight=1, ];
E: 10 136 [weight=2, ];
E: 10 139 [weight=14, ];
E: 11 12 [weight=1, ];
E: 11 13 [weight=2, ];
E: 11 14 [weight=2, ];
E: 12 13 [weight=1, ];
E: 12 14 [weight=2, ];
E: 12 38 [weight=1, ];
E: 13 14 [weight=2, ];
E: 14 38 [weight=1, ];
E: 15 30 [weight=1, ];
E: 15 38 [weight=3, ];
E: 15 81 [weight=8, ];
E: 15 121 [weight=1, ];
E: 15 139 [weight=20, ];
E: 16 30 [weight=1, ];
E: 16 38 [weight=3, ];
E: 16 139 [weight=6, ];
E: 17 28 [weight=1, ];
E: 17 38 [weight=2, ];
E: 18 30 [weight=1, ];
E: 18 38 [weight=2, ];
E: 18 81 [weight=10, ];
E: 18 121 [weight=1, ];
E: 18 139 [weight=23, ];
E: 19 30 [weight=1, ];
E: 19 38 [weight=2, ];
E: 19 81 [weight=10, ];
E: 19 121 [weight=1, ];
E: 19 139 [weight=23, ];
E: 20 30 [weight=1, ];
E: 20 38 [weight=2, ];
E: 20 81 [weight=10, ];
E: 20 121 [weight=1, ];
E: 20 139 [weight=23, ];
E: 21 30 [weight=1, ];
E: 21 38 [weight=2, ];
E: 21 81 [weight=10, ];
E: 21 121 [weight=1, ];
E: 21 139 [weight=23, ];
E: 22 30 [weight=1, ];
E: 22 38 [weight=2, ];
E: 22 81 [weight=10, ];
E: 22 121 [weight=1, ];
E: 22 139 [weight=23, ];
E: 23 30 [weight=1, ];
E: 23 38 [weight=2, ];
E: 23 81 [weight=10, ];
E: 23 121 [weight=1, ];
E: 23 139 [weight=23, ];
E: 24 30 [weight=1, ];
E: 24 38 [weight=2, ];
E: 24 81 [weight=10, ];
E: 24 121 [weight=1, ];
E: 24 139 [weight=23, ];
E: 25 30 [weight=1, ];
E: 25 38 [weight=2, ];
E: 25 81 [weight=10, ];
E: 25 121 [weight=1, ];
E: 25 139 [weight=23, ];
E: 26 28 [weight=1, ];
E: 26 30 [weight=1, ];
E: 26 38 [weight=5, ];
E: 26 81 [weight=3, ];
E: 26 121 [weight=1, ];
E: 26 139 [weight=18, ];
E: 27 38 [weight=3, ];
E: 28 38 [weight=3, ];
E: 29 30 [weight=1, ];
E: 29 38 [weight=2, ];
E: 29 139 [weight=6, ];
E: 30 37 [weight=8, ];
E: 30 38 [weight=12, ];
E: 30 139 [weight=21, ];
E: 31 38 [weight=2, ];
E: 31 139 [weight=1, ];
E: 32 38 [weight=2, ];
E: 33 37 [weight=2, ];
E: 33 38 [weight=4, ];
E: 33 139 [weight=2, ];
E: 34 36 [weight=1, ];
E: 34 37 [weight=1, ];
E: 34 38 [weight=3, ];
E: 34 139 [weight=1, ];
E: 35 37 [weight=2, ];
E: 35 38 [weight=4, ];
E: 35 139 [weight=2, ];
E: 36 37 [weight=2, ];
E: 36 38 [weight=4, ];
E: 36 139 [weight=2, ];
E: 37 139 [weight=1, ];
E: 38 139 [weight=1, ];
E: 39 41 [weight=1, ];
E: 39 44 [weight=1, ];
E: 39 45 [weight=8, ];
E: 40 41 [weight=2, ];
E: 40 42 [weight=1, ];
E: 40 45 [weight=4, ];
E: 41 42 [weight=1, ];
E: 41 44 [weight=2, ];
E: 41 45 [weight=21, ];
E: 41 46 [weight=1, ];
E: 41 57 [weight=1, ];
E: 41 64 [weight=1, ];
E: 41 67 [weight=1, ];
E: 42 45 [weight=5, ];
E: 43 45 [weight=2, ];
E: 43 58 [weight=1, ];
E: 43 124 [weight=1, ];
E: 43 128 [weight=2, ];
E: 43 136 [weight=2, ];
E: 43 139 [weight=3, ];
E: 44 45 [weight=1, ];
E: 46 47 [weight=1, ];
E: 46 57 [weight=2, ];
E: 47 49 [weight=1, ];
E: 48 49 [weight=1, ];
E: 48 57 [weight=2, ];
E: 49 51 [weight=1, ];
E: 50 51 [weight=1, ];
E: 50 57 [weight=2, ];
E: 51 58 [weight=1, ];
E: 51 60 [weight=1, ];
E: 51 61 [weight=2, ];
E: 51 62 [weight=1, ];
E: 51 124 [weight=1, ];
E: 51 126 [weight=1, ];
E: 51 128 [weight=2, ];
E: 51 139 [weight=2, ];
E: 52 53 [weight=1, ];
E: 53 54 [weight=1, ];
E: 53 55 [weight=1, ];
E: 54 55 [weight=1, ];
E: 54 57 [weight=1, ];
E: 55 62 [weight=1, ];
E: 55 139 [weight=2, ];
E: 56 58 [weight=1, ];
E: 56 60 [weight=3, ];
E: 56 61 [weight=3, ];
E: 56 62 [weight=4, ];
E: 56 133 [weight=5, ];
E: 56 135 [weight=1, ];
E: 56 139 [weight=2, ];
E: 57 58 [weight=1, ];
E: 57 60 [weight=1, ];
E: 57 61 [weight=1, ];
E: 57 62 [weight=1, ];
E: 57 139 [weight=2, ];
E: 58 60 [weight=1, ];
E: 58 61 [weight=1, ];
E: 58 62 [weight=1, ];
E: 58 119 [weight=1, ];
E: 58 139 [weight=10, ];
E: 59 60 [weight=1, ];
E: 59 61 [weight=1, ];
E: 59 62 [weight=1, ];
E: 59 133 [weight=2, ];
E: 59 139 [weight=16, ];
E: 60 108 [weight=1, ];
E: 60 112 [weight=1, ];
E: 60 125 [weight=1, ];
E: 60 129 [weight=1, ];
E: 60 139 [weight=32, ];
E: 61 63 [weight=1, ];
E: 61 139 [weight=1, ];
E: 62 63 [weight=1, ];
E: 62 139 [weight=1, ];
E: 63 108 [weight=1, ];
E: 63 112 [weight=1, ];
E: 63 126 [weight=1, ];
E: 63 129 [weight=1, ];
E: 63 135 [weight=1, ];
E: 63 137 [weight=1, ];
E: 63 139 [weight=30, ];
E: 64 80 [weight=1, ];
E: 69 70 [weight=1, ];
E: 70 105 [weight=1, ];
E: 70 108 [weight=1, ];
E: 70 112 [weight=1, ];
E: 71 72 [weight=1, ];
E: 71 74 [weight=1, ];
E: 71 79 [weight=1, ];
E: 72 77 [weight=1, ];
E: 72 98 [weight=1, ];
E: 72 104 [weight=1, ];
E: 72 139 [weight=2, ];
E: 73 88 [weight=1, ];
E: 73 93 [weight=1, ];
E: 73 99 [weight=2, ];
E: 73 104 [weight=1, ];
E: 73 106 [weight=1, ];
E: 73 109 [weight=1, ];
E: 73 112 [weight=1, ];
E: 73 129 [weight=1, ];
E: 73 131 [weight=2, ];
E: 74 99 [weight=1, ];
E: 74 110 [weight=1, ];
E: 75 76 [weight=1, ];
E: 75 139 [weight=3, ];
E: 76 83 [weight=1, ];
E: 76 106 [weight=1, ];
E: 76 112 [weight=1, ];
E: 76 139 [weight=2, ];
E: 77 78 [weight=1, ];
E: 78 106 [weight=1, ];
E: 78 108 [weight=1, ];
E: 78 112 [weight=1, ];
E: 79 110 [weight=1, ];
E: 79 131 [weight=1, ];
E: 79 139 [weight=2, ];
E: 80 105 [weight=1, ];
E: 81 82 [weight=1, ];
E: 81 139 [weight=2, ];
E: 82 83 [weight=1, ];
E: 82 112 [weight=1, ];
E: 82 139 [weight=3, ];
E: 83 98 [weight=1, ];
E: 83 111 [weight=1, ];
E: 83 139 [weight=2, ];
E: 88 89 [weight=1, ];
E: 88 91 [weight=1, ];
E: 88 139 [weight=2, ];
E: 89 90 [weight=1, ];
E: 89 139 [weight=2, ];
E: 90 98 [weight=1, ];
E: 90 139 [weight=4, ];
E: 91 112 [weight=1, ];
E: 92 93 [weight=1, ];
E: 92 139 [weight=2, ];
E: 93 96 [weight=1, ];
E: 93 98 [weight=1, ];
E: 93 139 [weight=4, ];
E: 94 98 [weight=2, ];
E: 95 99 [weight=2, ];
E: 96 97 [weight=1, ];
E: 97 106 [weight=1, ];
E: 97 108 [weight=1, ];
E: 97 112 [weight=1, ];
E: 98 99 [weight=1, ];
E: 99 106 [weight=1, ];
E: 100 106 [weight=1, ];
E: 101 106 [weight=1, ];
E: 102 112 [weight=1, ];
E: 105 109 [weight=1, ];
E: 105 112 [weight=1, ];
E: 105 115 [weight=1, ];
E: 106 109 [weight=1, ];
E: 106 112 [weight=1, ];
E: 106 115 [weight=1, ];
E: 107 111 [weight=1, ];
E: 108 109 [weight=1, ];
E: 110 112 [weight=1, ];
E: 111 112 [weight=1, ];
E: 112 113 [weight=1, ];
E: 114 115 [weight=1, ];
E: 114 139 [weight=4, ];
E: 115 116 [weight=2, ];
E: 117 139 [weight=3, ];
E: 118 119 [weight=1, ];
E: 118 139 [weight=1, ];
E: 119 121 [weight=2, ];
E: 119 139 [weight=16, ];
E: 120 122 [weight=1, ];
E: 120 139 [weight=2, ];
E: 121 139 [weight=2, ];
E: 122 139 [weight=2, ];
E: 123 139 [weight=5, ];
E: 124 125 [weight=1, ];
E: 124 139 [weight=6, ];
E: 125 139 [weight=5, ];
E: 126 139 [weight=5, ];
E: 127 139 [weight=5, ];
E: 128 130 [weight=1, ];
E: 128 133 [weight=1, ];
E: 128 139 [weight=3, ];
E: 129 131 [weight=1, ];
E: 129 133 [weight=1, ];
E: 129 139 [weight=3, ];
E: 130 139 [weight=1, ];
E: 131 139 [weight=1, ];
E: 132 133 [weight=1, ];
E: 132 139 [weight=1, ];
E: 133 139 [weight=5, ];
E: 134 135 [weight=1, ];
E: 134 139 [weight=1, ];
E: 135 139 [weight=1, ];
E: 136 139 [weight=1, ];
E: 137 139 [weight=1, ];
E: 138 139 [weight=2, ];
