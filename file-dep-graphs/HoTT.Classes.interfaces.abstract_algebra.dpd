N: 16 "CutMinusSpec_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 15 "CutMinusSpec_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 17 "CutMinusSpec_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 14 "CutMinusSpec_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 114 "FieldCharacteristic" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 180 "IsAbGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 179 "IsAbGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 181 "IsAbGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 178 "IsAbGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 254 "IsApart_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 253 "IsApart_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 255 "IsApart_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 252 "IsApart_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 44 "IsBoundedJoinPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 110 "IsBoundedJoinSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 91 "IsBoundedLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 90 "IsBoundedLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 92 "IsBoundedLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 89 "IsBoundedLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 106 "IsBoundedMeetSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 188 "IsBoundedSemiLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 187 "IsBoundedSemiLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 189 "IsBoundedSemiLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 186 "IsBoundedSemiLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 152 "IsCRing_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 151 "IsCRing_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 153 "IsCRing_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 150 "IsCRing_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 205 "IsCommutativeMonoid_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 204 "IsCommutativeMonoid_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 206 "IsCommutativeMonoid_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 203 "IsCommutativeMonoid_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 230 "IsCommutativeSemiGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 229 "IsCommutativeSemiGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 231 "IsCommutativeSemiGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 228 "IsCommutativeSemiGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 121 "IsDecField_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 120 "IsDecField_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 122 "IsDecField_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 119 "IsDecField_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 81 "IsDistributiveLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 80 "IsDistributiveLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 82 "IsDistributiveLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 79 "IsDistributiveLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 133 "IsField_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 132 "IsField_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 134 "IsField_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 131 "IsField_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 197 "IsGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 196 "IsGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 198 "IsGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 195 "IsGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 142 "IsIntegralDomain_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 141 "IsIntegralDomain_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 143 "IsIntegralDomain_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 140 "IsIntegralDomain_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 48 "IsJoinPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 112 "IsJoinSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 39 "IsLatticePreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 38 "IsLatticePreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 40 "IsLatticePreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 37 "IsLatticePreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 101 "IsLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 100 "IsLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 102 "IsLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 99 "IsLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 46 "IsMeetPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 108 "IsMeetSemiLattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 69 "IsMonoidPreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 68 "IsMonoidPreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 70 "IsMonoidPreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 67 "IsMonoidPreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 214 "IsMonoid_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 213 "IsMonoid_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 215 "IsMonoid_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 212 "IsMonoid_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 162 "IsRing_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 161 "IsRing_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 163 "IsRing_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 160 "IsRing_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 172 "IsSemiCRing_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 171 "IsSemiCRing_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 173 "IsSemiCRing_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 170 "IsSemiCRing_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 76 "IsSemiGroupPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 238 "IsSemiGroup_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 237 "IsSemiGroup_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 239 "IsSemiGroup_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 236 "IsSemiGroup_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 222 "IsSemiLattice_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 221 "IsSemiLattice_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 223 "IsSemiLattice_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 220 "IsSemiLattice_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 61 "IsSemiRingPreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 60 "IsSemiRingPreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 62 "IsSemiRingPreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 59 "IsSemiRingPreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 53 "IsSemiRingStrongPreserving_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 52 "IsSemiRingStrongPreserving_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 54 "IsSemiRingStrongPreserving_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 51 "IsSemiRingStrongPreserving_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 24 "IsStrongInjective_ind" [body=yes, kind=cnst, prop=yes, path="abstract_algebra", ];
N: 23 "IsStrongInjective_rec" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 25 "IsStrongInjective_rect" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 22 "IsStrongInjective_sind" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 74 "IsUnitPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 243 "StrongBinaryExtensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 245 "StrongExtensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 176 "abgroup_commutative" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 177 "abgroup_group" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 248 "apart_cotrans" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 246 "apart_irrefl" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 250 "apart_mere" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 251 "apart_set" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 249 "apart_symmetric" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 109 "bounded_join_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 43 "bounded_join_slmor_monmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 105 "bounded_meet_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 184 "bounded_semilattice_idempotent" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 185 "bounded_semilattice_mon" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 86 "boundedjoin_meet_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 88 "boundedlattice_join" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 87 "boundedlattice_meet" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 85 "boundedmeet_join_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 201 "commonoid_commutative" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 202 "commonoid_mon" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 31 "compose_monoid_morphism" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 32 "compose_sg_morphism" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 226 "comsg_comm" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 227 "comsg_sg" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 147 "cring_dist" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 149 "cring_group" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 148 "cring_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 12 "cut_minus_0" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 13 "cut_minus_le" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 116 "dec_recip_0" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 115 "dec_recip_inverse" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 117 "decfield_nontrivial" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 118 "decfield_ring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 78 "distr_lattice_lattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 129 "field_apart" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 113 "field_characteristic" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 127 "field_mult_ext" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 126 "field_nontrivial" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 128 "field_plus_ext" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 130 "field_ring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 194 "group_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 33 "id_monoid_morphism" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 34 "id_sg_morphism" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 138 "intdom_nontrivial" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 137 "intdom_nozeroes" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 139 "intdom_ring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 29 "invert_monoid_morphism" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 30 "invert_sg_morphism" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 1 "ishprop_isgroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 3 "ishprop_ismonoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 8 "ishprop_ismonoidpreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 5 "ishprop_issemigroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 11 "ishprop_issemigrouppreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 7 "ishprop_issemiringpreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 28 "isinjective_mapinO_tr" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 146 "isring_iscring" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 9 "issig_IsMonoidPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 10 "issig_IsSemiRingPreserving" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 2 "issig_isgroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 4 "issig_ismonoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 6 "issig_issemigroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 96 "join_meet_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 77 "join_meet_distr_l" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 111 "join_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 47 "join_slmor_sgmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 98 "lattice_join" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 97 "lattice_meet" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 36 "latticemor_join_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 35 "latticemor_meet_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 95 "meet_join_absorption" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 107 "meet_semilattice" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 45 "meet_slmor_sgmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 66 "monmor_sgmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 65 "monmor_unitmor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 210 "monoid_left_id" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 209 "monoid_right_id" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 211 "monoid_semigroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 193 "negate_l" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 192 "negate_r" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 73 "preserves_mon_unit" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 75 "preserves_sg_op" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 125 "recip_inverse" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 159 "ring_abgroup" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 157 "ring_dist_left" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 156 "ring_dist_right" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 158 "ring_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 218 "semilattice_idempotent" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 219 "semilattice_sg" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 168 "semimult_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 169 "semiplus_monoid" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 167 "semiring_distr" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 166 "semiring_left_absorb" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 57 "semiringmor_mult_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 58 "semiringmor_plus_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 234 "sg_ass" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 235 "sg_set" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 242 "strong_binary_extensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 244 "strong_extensionality" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 21 "strong_injective" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 20 "strong_injective_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 50 "strong_semiringmor_sr_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 49 "strong_semiringmor_strong_mor" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 247 "tight_apart" [body=yes, kind=cnst, prop=no, path="abstract_algebra", ];
N: 19 "CutMinusSpec" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 183 "IsAbGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 257 "IsApart" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 94 "IsBoundedLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 191 "IsBoundedSemiLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 155 "IsCRing" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 208 "IsCommutativeMonoid" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 233 "IsCommutativeSemiGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 124 "IsDecField" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 84 "IsDistributiveLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 136 "IsField" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 200 "IsGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 145 "IsIntegralDomain" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 104 "IsLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 42 "IsLatticePreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 217 "IsMonoid" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 72 "IsMonoidPreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 165 "IsRing" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 175 "IsSemiCRing" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 241 "IsSemiGroup" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 225 "IsSemiLattice" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 64 "IsSemiRingPreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 56 "IsSemiRingStrongPreserving" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 27 "IsStrongInjective" [kind=inductive, prop=no, path="abstract_algebra", ];
N: 18 "Build_CutMinusSpec" [kind=construct, prop=no, path="abstract_algebra", ];
N: 182 "Build_IsAbGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 256 "Build_IsApart" [kind=construct, prop=no, path="abstract_algebra", ];
N: 93 "Build_IsBoundedLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 190 "Build_IsBoundedSemiLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 154 "Build_IsCRing" [kind=construct, prop=no, path="abstract_algebra", ];
N: 207 "Build_IsCommutativeMonoid" [kind=construct, prop=no, path="abstract_algebra", ];
N: 232 "Build_IsCommutativeSemiGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 123 "Build_IsDecField" [kind=construct, prop=no, path="abstract_algebra", ];
N: 83 "Build_IsDistributiveLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 135 "Build_IsField" [kind=construct, prop=no, path="abstract_algebra", ];
N: 199 "Build_IsGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 144 "Build_IsIntegralDomain" [kind=construct, prop=no, path="abstract_algebra", ];
N: 103 "Build_IsLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 41 "Build_IsLatticePreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 216 "Build_IsMonoid" [kind=construct, prop=no, path="abstract_algebra", ];
N: 71 "Build_IsMonoidPreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 164 "Build_IsRing" [kind=construct, prop=no, path="abstract_algebra", ];
N: 174 "Build_IsSemiCRing" [kind=construct, prop=no, path="abstract_algebra", ];
N: 240 "Build_IsSemiGroup" [kind=construct, prop=no, path="abstract_algebra", ];
N: 224 "Build_IsSemiLattice" [kind=construct, prop=no, path="abstract_algebra", ];
N: 63 "Build_IsSemiRingPreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 55 "Build_IsSemiRingStrongPreserving" [kind=construct, prop=no, path="abstract_algebra", ];
N: 26 "Build_IsStrongInjective" [kind=construct, prop=no, path="abstract_algebra", ];
E: 1 2 [weight=15, ];
E: 1 3 [weight=1, ];
E: 1 200 [weight=13, ];
E: 1 217 [weight=62, ];
E: 2 199 [weight=8, ];
E: 2 200 [weight=12, ];
E: 2 217 [weight=44, ];
E: 3 4 [weight=15, ];
E: 3 5 [weight=1, ];
E: 3 217 [weight=13, ];
E: 3 241 [weight=62, ];
E: 4 216 [weight=8, ];
E: 4 217 [weight=12, ];
E: 4 241 [weight=44, ];
E: 5 6 [weight=15, ];
E: 5 241 [weight=13, ];
E: 6 240 [weight=8, ];
E: 6 241 [weight=12, ];
E: 7 8 [weight=2, ];
E: 7 10 [weight=1, ];
E: 7 64 [weight=2, ];
E: 7 72 [weight=7, ];
E: 8 9 [weight=1, ];
E: 8 11 [weight=1, ];
E: 8 72 [weight=2, ];
E: 8 74 [weight=8, ];
E: 8 76 [weight=10, ];
E: 9 71 [weight=8, ];
E: 9 72 [weight=12, ];
E: 9 74 [weight=21, ];
E: 9 76 [weight=39, ];
E: 10 63 [weight=8, ];
E: 10 64 [weight=12, ];
E: 10 72 [weight=60, ];
E: 11 76 [weight=2, ];
E: 12 19 [weight=2, ];
E: 13 19 [weight=2, ];
E: 14 18 [weight=2, ];
E: 14 19 [weight=4, ];
E: 15 17 [weight=1, ];
E: 15 18 [weight=1, ];
E: 15 19 [weight=3, ];
E: 16 18 [weight=2, ];
E: 16 19 [weight=4, ];
E: 17 18 [weight=2, ];
E: 17 19 [weight=4, ];
E: 20 27 [weight=2, ];
E: 20 245 [weight=1, ];
E: 21 27 [weight=2, ];
E: 22 26 [weight=2, ];
E: 22 27 [weight=4, ];
E: 22 245 [weight=2, ];
E: 23 25 [weight=1, ];
E: 23 26 [weight=1, ];
E: 23 27 [weight=3, ];
E: 23 245 [weight=1, ];
E: 24 26 [weight=2, ];
E: 24 27 [weight=4, ];
E: 24 245 [weight=2, ];
E: 25 26 [weight=2, ];
E: 25 27 [weight=4, ];
E: 25 245 [weight=2, ];
E: 26 245 [weight=1, ];
E: 27 245 [weight=1, ];
E: 29 30 [weight=1, ];
E: 29 71 [weight=1, ];
E: 29 72 [weight=3, ];
E: 29 73 [weight=1, ];
E: 30 76 [weight=5, ];
E: 31 32 [weight=1, ];
E: 31 71 [weight=1, ];
E: 31 72 [weight=5, ];
E: 31 73 [weight=2, ];
E: 31 74 [weight=1, ];
E: 32 76 [weight=8, ];
E: 33 71 [weight=1, ];
E: 33 72 [weight=1, ];
E: 34 76 [weight=1, ];
E: 35 42 [weight=2, ];
E: 35 46 [weight=1, ];
E: 36 42 [weight=2, ];
E: 36 48 [weight=1, ];
E: 37 41 [weight=2, ];
E: 37 42 [weight=4, ];
E: 37 46 [weight=2, ];
E: 37 48 [weight=2, ];
E: 38 40 [weight=1, ];
E: 38 41 [weight=1, ];
E: 38 42 [weight=3, ];
E: 38 46 [weight=1, ];
E: 38 48 [weight=1, ];
E: 39 41 [weight=2, ];
E: 39 42 [weight=4, ];
E: 39 46 [weight=2, ];
E: 39 48 [weight=2, ];
E: 40 41 [weight=2, ];
E: 40 42 [weight=4, ];
E: 40 46 [weight=2, ];
E: 40 48 [weight=2, ];
E: 41 46 [weight=1, ];
E: 41 48 [weight=1, ];
E: 42 46 [weight=1, ];
E: 42 48 [weight=1, ];
E: 43 44 [weight=2, ];
E: 43 72 [weight=1, ];
E: 44 72 [weight=1, ];
E: 45 46 [weight=2, ];
E: 45 76 [weight=1, ];
E: 46 76 [weight=1, ];
E: 47 48 [weight=2, ];
E: 47 76 [weight=1, ];
E: 48 76 [weight=1, ];
E: 49 56 [weight=2, ];
E: 49 245 [weight=1, ];
E: 50 56 [weight=2, ];
E: 50 64 [weight=1, ];
E: 51 55 [weight=2, ];
E: 51 56 [weight=4, ];
E: 51 64 [weight=2, ];
E: 51 245 [weight=2, ];
E: 52 54 [weight=1, ];
E: 52 55 [weight=1, ];
E: 52 56 [weight=3, ];
E: 52 64 [weight=1, ];
E: 52 245 [weight=1, ];
E: 53 55 [weight=2, ];
E: 53 56 [weight=4, ];
E: 53 64 [weight=2, ];
E: 53 245 [weight=2, ];
E: 54 55 [weight=2, ];
E: 54 56 [weight=4, ];
E: 54 64 [weight=2, ];
E: 54 245 [weight=2, ];
E: 55 64 [weight=1, ];
E: 55 245 [weight=1, ];
E: 56 64 [weight=1, ];
E: 56 245 [weight=1, ];
E: 57 64 [weight=2, ];
E: 57 72 [weight=1, ];
E: 58 64 [weight=2, ];
E: 58 72 [weight=1, ];
E: 59 63 [weight=2, ];
E: 59 64 [weight=4, ];
E: 59 72 [weight=4, ];
E: 60 62 [weight=1, ];
E: 60 63 [weight=1, ];
E: 60 64 [weight=3, ];
E: 60 72 [weight=2, ];
E: 61 63 [weight=2, ];
E: 61 64 [weight=4, ];
E: 61 72 [weight=4, ];
E: 62 63 [weight=2, ];
E: 62 64 [weight=4, ];
E: 62 72 [weight=4, ];
E: 63 72 [weight=2, ];
E: 64 72 [weight=2, ];
E: 65 72 [weight=2, ];
E: 65 74 [weight=1, ];
E: 66 72 [weight=2, ];
E: 66 76 [weight=1, ];
E: 67 71 [weight=2, ];
E: 67 72 [weight=4, ];
E: 67 74 [weight=2, ];
E: 67 76 [weight=2, ];
E: 68 70 [weight=1, ];
E: 68 71 [weight=1, ];
E: 68 72 [weight=3, ];
E: 68 74 [weight=1, ];
E: 68 76 [weight=1, ];
E: 69 71 [weight=2, ];
E: 69 72 [weight=4, ];
E: 69 74 [weight=2, ];
E: 69 76 [weight=2, ];
E: 70 71 [weight=2, ];
E: 70 72 [weight=4, ];
E: 70 74 [weight=2, ];
E: 70 76 [weight=2, ];
E: 71 74 [weight=1, ];
E: 71 76 [weight=1, ];
E: 72 74 [weight=1, ];
E: 72 76 [weight=1, ];
E: 73 74 [weight=2, ];
E: 75 76 [weight=2, ];
E: 77 84 [weight=2, ];
E: 78 84 [weight=2, ];
E: 78 104 [weight=1, ];
E: 79 83 [weight=2, ];
E: 79 84 [weight=4, ];
E: 79 104 [weight=2, ];
E: 80 82 [weight=1, ];
E: 80 83 [weight=1, ];
E: 80 84 [weight=3, ];
E: 80 104 [weight=1, ];
E: 81 83 [weight=2, ];
E: 81 84 [weight=4, ];
E: 81 104 [weight=2, ];
E: 82 83 [weight=2, ];
E: 82 84 [weight=4, ];
E: 82 104 [weight=2, ];
E: 83 104 [weight=1, ];
E: 84 104 [weight=1, ];
E: 85 94 [weight=2, ];
E: 86 94 [weight=2, ];
E: 87 94 [weight=2, ];
E: 87 106 [weight=1, ];
E: 88 94 [weight=2, ];
E: 88 110 [weight=1, ];
E: 89 93 [weight=2, ];
E: 89 94 [weight=4, ];
E: 89 106 [weight=2, ];
E: 89 110 [weight=2, ];
E: 90 92 [weight=1, ];
E: 90 93 [weight=1, ];
E: 90 94 [weight=3, ];
E: 90 106 [weight=1, ];
E: 90 110 [weight=1, ];
E: 91 93 [weight=2, ];
E: 91 94 [weight=4, ];
E: 91 106 [weight=2, ];
E: 91 110 [weight=2, ];
E: 92 93 [weight=2, ];
E: 92 94 [weight=4, ];
E: 92 106 [weight=2, ];
E: 92 110 [weight=2, ];
E: 93 106 [weight=1, ];
E: 93 110 [weight=1, ];
E: 94 106 [weight=1, ];
E: 94 110 [weight=1, ];
E: 95 104 [weight=2, ];
E: 96 104 [weight=2, ];
E: 97 104 [weight=2, ];
E: 97 108 [weight=1, ];
E: 98 104 [weight=2, ];
E: 98 112 [weight=1, ];
E: 99 103 [weight=2, ];
E: 99 104 [weight=4, ];
E: 99 108 [weight=2, ];
E: 99 112 [weight=2, ];
E: 100 102 [weight=1, ];
E: 100 103 [weight=1, ];
E: 100 104 [weight=3, ];
E: 100 108 [weight=1, ];
E: 100 112 [weight=1, ];
E: 101 103 [weight=2, ];
E: 101 104 [weight=4, ];
E: 101 108 [weight=2, ];
E: 101 112 [weight=2, ];
E: 102 103 [weight=2, ];
E: 102 104 [weight=4, ];
E: 102 108 [weight=2, ];
E: 102 112 [weight=2, ];
E: 103 108 [weight=1, ];
E: 103 112 [weight=1, ];
E: 104 108 [weight=1, ];
E: 104 112 [weight=1, ];
E: 105 106 [weight=2, ];
E: 105 191 [weight=1, ];
E: 106 191 [weight=1, ];
E: 107 108 [weight=2, ];
E: 107 225 [weight=1, ];
E: 108 225 [weight=1, ];
E: 109 110 [weight=2, ];
E: 109 191 [weight=1, ];
E: 110 191 [weight=1, ];
E: 111 112 [weight=2, ];
E: 111 225 [weight=1, ];
E: 112 225 [weight=1, ];
E: 113 114 [weight=2, ];
E: 115 124 [weight=2, ];
E: 116 124 [weight=2, ];
E: 117 124 [weight=2, ];
E: 118 124 [weight=2, ];
E: 118 155 [weight=1, ];
E: 119 123 [weight=2, ];
E: 119 124 [weight=4, ];
E: 119 155 [weight=2, ];
E: 120 122 [weight=1, ];
E: 120 123 [weight=1, ];
E: 120 124 [weight=3, ];
E: 120 155 [weight=1, ];
E: 121 123 [weight=2, ];
E: 121 124 [weight=4, ];
E: 121 155 [weight=2, ];
E: 122 123 [weight=2, ];
E: 122 124 [weight=4, ];
E: 122 155 [weight=2, ];
E: 123 155 [weight=1, ];
E: 124 155 [weight=1, ];
E: 125 136 [weight=2, ];
E: 126 136 [weight=2, ];
E: 127 136 [weight=2, ];
E: 127 243 [weight=1, ];
E: 128 136 [weight=2, ];
E: 128 243 [weight=1, ];
E: 129 136 [weight=2, ];
E: 129 257 [weight=1, ];
E: 130 136 [weight=2, ];
E: 130 155 [weight=1, ];
E: 131 135 [weight=2, ];
E: 131 136 [weight=4, ];
E: 131 155 [weight=2, ];
E: 131 243 [weight=4, ];
E: 131 257 [weight=2, ];
E: 132 134 [weight=1, ];
E: 132 135 [weight=1, ];
E: 132 136 [weight=3, ];
E: 132 155 [weight=1, ];
E: 132 243 [weight=2, ];
E: 132 257 [weight=1, ];
E: 133 135 [weight=2, ];
E: 133 136 [weight=4, ];
E: 133 155 [weight=2, ];
E: 133 243 [weight=4, ];
E: 133 257 [weight=2, ];
E: 134 135 [weight=2, ];
E: 134 136 [weight=4, ];
E: 134 155 [weight=2, ];
E: 134 243 [weight=4, ];
E: 134 257 [weight=2, ];
E: 135 155 [weight=1, ];
E: 135 243 [weight=2, ];
E: 135 257 [weight=1, ];
E: 136 155 [weight=1, ];
E: 136 243 [weight=2, ];
E: 136 257 [weight=1, ];
E: 137 145 [weight=2, ];
E: 138 145 [weight=2, ];
E: 139 145 [weight=2, ];
E: 139 155 [weight=1, ];
E: 140 144 [weight=2, ];
E: 140 145 [weight=4, ];
E: 140 155 [weight=2, ];
E: 141 143 [weight=1, ];
E: 141 144 [weight=1, ];
E: 141 145 [weight=3, ];
E: 141 155 [weight=1, ];
E: 142 144 [weight=2, ];
E: 142 145 [weight=4, ];
E: 142 155 [weight=2, ];
E: 143 144 [weight=2, ];
E: 143 145 [weight=4, ];
E: 143 155 [weight=2, ];
E: 144 155 [weight=1, ];
E: 145 155 [weight=1, ];
E: 146 155 [weight=2, ];
E: 146 164 [weight=1, ];
E: 146 165 [weight=1, ];
E: 147 155 [weight=2, ];
E: 148 155 [weight=2, ];
E: 148 208 [weight=1, ];
E: 149 155 [weight=2, ];
E: 149 183 [weight=1, ];
E: 150 154 [weight=2, ];
E: 150 155 [weight=4, ];
E: 150 183 [weight=2, ];
E: 150 208 [weight=2, ];
E: 151 153 [weight=1, ];
E: 151 154 [weight=1, ];
E: 151 155 [weight=3, ];
E: 151 183 [weight=1, ];
E: 151 208 [weight=1, ];
E: 152 154 [weight=2, ];
E: 152 155 [weight=4, ];
E: 152 183 [weight=2, ];
E: 152 208 [weight=2, ];
E: 153 154 [weight=2, ];
E: 153 155 [weight=4, ];
E: 153 183 [weight=2, ];
E: 153 208 [weight=2, ];
E: 154 183 [weight=1, ];
E: 154 208 [weight=1, ];
E: 155 183 [weight=1, ];
E: 155 208 [weight=1, ];
E: 156 165 [weight=2, ];
E: 157 165 [weight=2, ];
E: 158 165 [weight=2, ];
E: 158 217 [weight=1, ];
E: 159 165 [weight=2, ];
E: 159 183 [weight=1, ];
E: 160 164 [weight=2, ];
E: 160 165 [weight=4, ];
E: 160 183 [weight=2, ];
E: 160 217 [weight=2, ];
E: 161 163 [weight=1, ];
E: 161 164 [weight=1, ];
E: 161 165 [weight=3, ];
E: 161 183 [weight=1, ];
E: 161 217 [weight=1, ];
E: 162 164 [weight=2, ];
E: 162 165 [weight=4, ];
E: 162 183 [weight=2, ];
E: 162 217 [weight=2, ];
E: 163 164 [weight=2, ];
E: 163 165 [weight=4, ];
E: 163 183 [weight=2, ];
E: 163 217 [weight=2, ];
E: 164 183 [weight=1, ];
E: 164 217 [weight=1, ];
E: 165 183 [weight=1, ];
E: 165 217 [weight=1, ];
E: 166 175 [weight=2, ];
E: 167 175 [weight=2, ];
E: 168 175 [weight=2, ];
E: 168 208 [weight=1, ];
E: 169 175 [weight=2, ];
E: 169 208 [weight=1, ];
E: 170 174 [weight=2, ];
E: 170 175 [weight=4, ];
E: 170 208 [weight=4, ];
E: 171 173 [weight=1, ];
E: 171 174 [weight=1, ];
E: 171 175 [weight=3, ];
E: 171 208 [weight=2, ];
E: 172 174 [weight=2, ];
E: 172 175 [weight=4, ];
E: 172 208 [weight=4, ];
E: 173 174 [weight=2, ];
E: 173 175 [weight=4, ];
E: 173 208 [weight=4, ];
E: 174 208 [weight=2, ];
E: 175 208 [weight=2, ];
E: 176 183 [weight=2, ];
E: 177 183 [weight=2, ];
E: 177 200 [weight=1, ];
E: 178 182 [weight=2, ];
E: 178 183 [weight=4, ];
E: 178 200 [weight=2, ];
E: 179 181 [weight=1, ];
E: 179 182 [weight=1, ];
E: 179 183 [weight=3, ];
E: 179 200 [weight=1, ];
E: 180 182 [weight=2, ];
E: 180 183 [weight=4, ];
E: 180 200 [weight=2, ];
E: 181 182 [weight=2, ];
E: 181 183 [weight=4, ];
E: 181 200 [weight=2, ];
E: 182 200 [weight=1, ];
E: 183 200 [weight=1, ];
E: 184 191 [weight=2, ];
E: 185 191 [weight=2, ];
E: 185 208 [weight=1, ];
E: 186 190 [weight=2, ];
E: 186 191 [weight=4, ];
E: 186 208 [weight=2, ];
E: 187 189 [weight=1, ];
E: 187 190 [weight=1, ];
E: 187 191 [weight=3, ];
E: 187 208 [weight=1, ];
E: 188 190 [weight=2, ];
E: 188 191 [weight=4, ];
E: 188 208 [weight=2, ];
E: 189 190 [weight=2, ];
E: 189 191 [weight=4, ];
E: 189 208 [weight=2, ];
E: 190 208 [weight=1, ];
E: 191 208 [weight=1, ];
E: 192 200 [weight=2, ];
E: 193 200 [weight=2, ];
E: 194 200 [weight=2, ];
E: 194 217 [weight=1, ];
E: 195 199 [weight=2, ];
E: 195 200 [weight=4, ];
E: 195 217 [weight=2, ];
E: 196 198 [weight=1, ];
E: 196 199 [weight=1, ];
E: 196 200 [weight=3, ];
E: 196 217 [weight=1, ];
E: 197 199 [weight=2, ];
E: 197 200 [weight=4, ];
E: 197 217 [weight=2, ];
E: 198 199 [weight=2, ];
E: 198 200 [weight=4, ];
E: 198 217 [weight=2, ];
E: 199 217 [weight=1, ];
E: 200 217 [weight=1, ];
E: 201 208 [weight=2, ];
E: 202 208 [weight=2, ];
E: 202 217 [weight=1, ];
E: 203 207 [weight=2, ];
E: 203 208 [weight=4, ];
E: 203 217 [weight=2, ];
E: 204 206 [weight=1, ];
E: 204 207 [weight=1, ];
E: 204 208 [weight=3, ];
E: 204 217 [weight=1, ];
E: 205 207 [weight=2, ];
E: 205 208 [weight=4, ];
E: 205 217 [weight=2, ];
E: 206 207 [weight=2, ];
E: 206 208 [weight=4, ];
E: 206 217 [weight=2, ];
E: 207 217 [weight=1, ];
E: 208 217 [weight=1, ];
E: 209 217 [weight=2, ];
E: 210 217 [weight=2, ];
E: 211 217 [weight=2, ];
E: 211 241 [weight=1, ];
E: 212 216 [weight=2, ];
E: 212 217 [weight=4, ];
E: 212 241 [weight=2, ];
E: 213 215 [weight=1, ];
E: 213 216 [weight=1, ];
E: 213 217 [weight=3, ];
E: 213 241 [weight=1, ];
E: 214 216 [weight=2, ];
E: 214 217 [weight=4, ];
E: 214 241 [weight=2, ];
E: 215 216 [weight=2, ];
E: 215 217 [weight=4, ];
E: 215 241 [weight=2, ];
E: 216 241 [weight=1, ];
E: 217 241 [weight=1, ];
E: 218 225 [weight=2, ];
E: 219 225 [weight=2, ];
E: 219 233 [weight=1, ];
E: 220 224 [weight=2, ];
E: 220 225 [weight=4, ];
E: 220 233 [weight=2, ];
E: 221 223 [weight=1, ];
E: 221 224 [weight=1, ];
E: 221 225 [weight=3, ];
E: 221 233 [weight=1, ];
E: 222 224 [weight=2, ];
E: 222 225 [weight=4, ];
E: 222 233 [weight=2, ];
E: 223 224 [weight=2, ];
E: 223 225 [weight=4, ];
E: 223 233 [weight=2, ];
E: 224 233 [weight=1, ];
E: 225 233 [weight=1, ];
E: 226 233 [weight=2, ];
E: 227 233 [weight=2, ];
E: 227 241 [weight=1, ];
E: 228 232 [weight=2, ];
E: 228 233 [weight=4, ];
E: 228 241 [weight=2, ];
E: 229 231 [weight=1, ];
E: 229 232 [weight=1, ];
E: 229 233 [weight=3, ];
E: 229 241 [weight=1, ];
E: 230 232 [weight=2, ];
E: 230 233 [weight=4, ];
E: 230 241 [weight=2, ];
E: 231 232 [weight=2, ];
E: 231 233 [weight=4, ];
E: 231 241 [weight=2, ];
E: 232 241 [weight=1, ];
E: 233 241 [weight=1, ];
E: 234 241 [weight=2, ];
E: 235 241 [weight=2, ];
E: 236 240 [weight=2, ];
E: 236 241 [weight=4, ];
E: 237 239 [weight=1, ];
E: 237 240 [weight=1, ];
E: 237 241 [weight=3, ];
E: 238 240 [weight=2, ];
E: 238 241 [weight=4, ];
E: 239 240 [weight=2, ];
E: 239 241 [weight=4, ];
E: 242 243 [weight=2, ];
E: 244 245 [weight=2, ];
E: 246 257 [weight=2, ];
E: 247 257 [weight=2, ];
E: 248 257 [weight=2, ];
E: 249 257 [weight=2, ];
E: 250 257 [weight=2, ];
E: 251 257 [weight=2, ];
E: 252 256 [weight=2, ];
E: 252 257 [weight=4, ];
E: 253 255 [weight=1, ];
E: 253 256 [weight=1, ];
E: 253 257 [weight=3, ];
E: 254 256 [weight=2, ];
E: 254 257 [weight=4, ];
E: 255 256 [weight=2, ];
E: 255 257 [weight=4, ];
