N: 20 "DGraphQuotient" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 2 "GraphQuotient_ind" [body=yes, kind=cnst, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 1 "GraphQuotient_ind_beta_gqglue" [body=no, kind=cnst, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 22 "GraphQuotient_rec" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 21 "GraphQuotient_rec_beta_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 16 "equiv_dp_dgraphquotient" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 6 "equiv_functor_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 12 "equiv_gq_flatten" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 18 "flatten_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 17 "flatten_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 15 "flatten_ind" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 14 "flatten_rec" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 13 "flatten_rec_beta_gqglue" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 8 "functor2_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 11 "functor_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 9 "functor_gq_compose" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 10 "functor_gq_idmap" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 3 "gqglue" [body=no, kind=cnst, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 7 "isequiv_functor_gq" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 19 "transport_DGraphQuotient" [body=yes, kind=cnst, prop=no, path="GraphQuotient", ];
N: 5 "GraphQuotient" [kind=inductive, prop=no, path="GraphQuotient.GraphQuotient", ];
N: 4 "gq" [kind=construct, prop=no, path="GraphQuotient.GraphQuotient", ];
E: 1 2 [weight=3, ];
E: 1 3 [weight=3, ];
E: 1 4 [weight=11, ];
E: 1 5 [weight=4, ];
E: 2 3 [weight=4, ];
E: 2 4 [weight=14, ];
E: 2 5 [weight=9, ];
E: 3 4 [weight=2, ];
E: 3 5 [weight=1, ];
E: 6 5 [weight=4, ];
E: 6 7 [weight=1, ];
E: 6 11 [weight=1, ];
E: 7 5 [weight=28, ];
E: 7 8 [weight=2, ];
E: 7 9 [weight=2, ];
E: 7 10 [weight=2, ];
E: 7 11 [weight=17, ];
E: 8 2 [weight=1, ];
E: 8 3 [weight=32, ];
E: 8 4 [weight=178, ];
E: 8 5 [weight=109, ];
E: 8 11 [weight=110, ];
E: 8 21 [weight=2, ];
E: 9 2 [weight=1, ];
E: 9 3 [weight=30, ];
E: 9 4 [weight=80, ];
E: 9 5 [weight=103, ];
E: 9 11 [weight=78, ];
E: 9 21 [weight=3, ];
E: 9 22 [weight=6, ];
E: 10 2 [weight=1, ];
E: 10 3 [weight=14, ];
E: 10 4 [weight=44, ];
E: 10 5 [weight=52, ];
E: 10 11 [weight=19, ];
E: 10 21 [weight=1, ];
E: 11 3 [weight=1, ];
E: 11 4 [weight=1, ];
E: 11 5 [weight=3, ];
E: 11 22 [weight=1, ];
E: 12 2 [weight=1, ];
E: 12 3 [weight=107, ];
E: 12 4 [weight=475, ];
E: 12 5 [weight=669, ];
E: 12 13 [weight=2, ];
E: 12 14 [weight=86, ];
E: 12 15 [weight=1, ];
E: 12 17 [weight=106, ];
E: 12 18 [weight=41, ];
E: 12 20 [weight=494, ];
E: 12 21 [weight=2, ];
E: 12 22 [weight=88, ];
E: 13 1 [weight=1, ];
E: 13 2 [weight=60, ];
E: 13 3 [weight=2262, ];
E: 13 4 [weight=5174, ];
E: 13 5 [weight=3377, ];
E: 13 14 [weight=3, ];
E: 13 17 [weight=1, ];
E: 13 18 [weight=4, ];
E: 13 19 [weight=179, ];
E: 13 20 [weight=1849, ];
E: 14 2 [weight=1, ];
E: 14 3 [weight=7, ];
E: 14 4 [weight=15, ];
E: 14 5 [weight=12, ];
E: 14 19 [weight=1, ];
E: 14 20 [weight=9, ];
E: 15 2 [weight=1, ];
E: 15 3 [weight=42, ];
E: 15 4 [weight=216, ];
E: 15 5 [weight=195, ];
E: 15 17 [weight=4, ];
E: 15 18 [weight=62, ];
E: 15 19 [weight=19, ];
E: 15 20 [weight=198, ];
E: 16 3 [weight=3, ];
E: 16 4 [weight=8, ];
E: 16 5 [weight=3, ];
E: 16 19 [weight=1, ];
E: 16 20 [weight=5, ];
E: 17 3 [weight=1, ];
E: 17 4 [weight=2, ];
E: 17 5 [weight=2, ];
E: 17 18 [weight=2, ];
E: 17 19 [weight=1, ];
E: 17 20 [weight=2, ];
E: 18 4 [weight=1, ];
E: 18 5 [weight=2, ];
E: 18 20 [weight=2, ];
E: 19 3 [weight=6, ];
E: 19 4 [weight=25, ];
E: 19 5 [weight=6, ];
E: 19 20 [weight=19, ];
E: 19 21 [weight=1, ];
E: 20 5 [weight=1, ];
E: 20 22 [weight=1, ];
E: 21 1 [weight=1, ];
E: 21 2 [weight=26, ];
E: 21 3 [weight=72, ];
E: 21 4 [weight=170, ];
E: 21 5 [weight=136, ];
E: 21 22 [weight=6, ];
E: 22 2 [weight=1, ];
E: 22 3 [weight=2, ];
E: 22 4 [weight=4, ];
E: 22 5 [weight=5, ];
