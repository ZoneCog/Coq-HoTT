N: 9 "cancelL_equiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 10 "cancelL_isequiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 11 "cancelR_equiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 12 "cancelR_isequiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 6 "contr_basedhomotopy" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 5 "contr_basedhomotopy'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 37 "contr_equiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 36 "contr_equiv'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 52 "equiv_adjointify" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 30 "equiv_ap" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 29 "equiv_ap'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 14 "equiv_ap_inv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 13 "equiv_ap_inv'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 59 "equiv_compose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 58 "equiv_compose'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 1 "equiv_composeR'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 34 "equiv_contr_contr" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 49 "equiv_homotopic" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 48 "equiv_homotopic_inverse" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 63 "equiv_idmap" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 4 "equiv_ind" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 3 "equiv_ind_comp" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 28 "equiv_inj" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 18 "equiv_inverse" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 16 "equiv_inverse_compose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 15 "equiv_inverse_homotopy" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 46 "equiv_involution" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 2 "equiv_path_ind" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 23 "equiv_postcompose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 22 "equiv_postcompose'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 32 "equiv_pr1" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 26 "equiv_precompose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 25 "equiv_precompose'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 55 "equiv_transport" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 54 "is_adjoint'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 53 "isequiv_adjointify" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 31 "isequiv_ap" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 8 "isequiv_commsq" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 7 "isequiv_commsq'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 61 "isequiv_compose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 60 "isequiv_compose'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 35 "isequiv_contr_contr" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 51 "isequiv_homotopic" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 50 "isequiv_homotopic'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 64 "isequiv_idmap" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 19 "isequiv_inverse" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 47 "isequiv_involution" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 20 "isequiv_isequiv_postcompose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 21 "isequiv_isequiv_precompose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 24 "isequiv_postcompose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 33 "isequiv_pr1" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 27 "isequiv_precompose" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 56 "isequiv_transport" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 43 "moveL_equiv_M" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 42 "moveL_equiv_M'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 39 "moveL_equiv_V" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 38 "moveL_equiv_V'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 45 "moveR_equiv_M" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 44 "moveR_equiv_M'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 41 "moveR_equiv_V" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 40 "moveR_equiv_V'" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 62 "reflexive_equiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 17 "symmetric_equiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
N: 57 "transitive_equiv" [body=yes, kind=cnst, prop=no, path="Equivalences", ];
E: 1 58 [weight=1, ];
E: 2 4 [weight=1, ];
E: 3 4 [weight=2, ];
E: 5 36 [weight=1, ];
E: 5 52 [weight=1, ];
E: 6 36 [weight=1, ];
E: 6 52 [weight=1, ];
E: 7 10 [weight=1, ];
E: 7 51 [weight=1, ];
E: 7 61 [weight=1, ];
E: 8 12 [weight=1, ];
E: 8 51 [weight=1, ];
E: 8 61 [weight=1, ];
E: 9 10 [weight=1, ];
E: 10 19 [weight=1, ];
E: 10 51 [weight=1, ];
E: 10 61 [weight=1, ];
E: 11 12 [weight=1, ];
E: 12 19 [weight=1, ];
E: 12 51 [weight=1, ];
E: 12 61 [weight=1, ];
E: 13 18 [weight=4, ];
E: 13 29 [weight=1, ];
E: 14 18 [weight=1, ];
E: 14 19 [weight=1, ];
E: 14 30 [weight=1, ];
E: 16 18 [weight=6, ];
E: 16 58 [weight=5, ];
E: 17 18 [weight=1, ];
E: 18 19 [weight=1, ];
E: 19 28 [weight=1, ];
E: 19 31 [weight=1, ];
E: 20 28 [weight=1, ];
E: 20 53 [weight=1, ];
E: 21 28 [weight=1, ];
E: 21 53 [weight=1, ];
E: 22 24 [weight=1, ];
E: 23 24 [weight=1, ];
E: 24 53 [weight=1, ];
E: 25 27 [weight=1, ];
E: 26 27 [weight=1, ];
E: 27 53 [weight=1, ];
E: 28 31 [weight=1, ];
E: 29 30 [weight=1, ];
E: 30 31 [weight=1, ];
E: 31 53 [weight=1, ];
E: 32 33 [weight=1, ];
E: 34 35 [weight=1, ];
E: 36 37 [weight=1, ];
E: 37 45 [weight=1, ];
E: 38 39 [weight=1, ];
E: 40 41 [weight=1, ];
E: 42 43 [weight=1, ];
E: 44 45 [weight=1, ];
E: 46 52 [weight=1, ];
E: 47 53 [weight=1, ];
E: 48 52 [weight=1, ];
E: 49 51 [weight=1, ];
E: 50 51 [weight=1, ];
E: 51 53 [weight=1, ];
E: 52 53 [weight=1, ];
E: 53 54 [weight=1, ];
E: 55 56 [weight=1, ];
E: 57 59 [weight=1, ];
E: 58 59 [weight=1, ];
E: 59 61 [weight=1, ];
E: 60 61 [weight=1, ];
E: 62 63 [weight=1, ];
E: 63 64 [weight=1, ];
