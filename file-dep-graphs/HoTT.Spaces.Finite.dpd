N: 157 "Fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 108 "FinNat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 82 "FinSeq" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 55 "Finite_ind" [body=yes, kind=cnst, prop=yes, path="Finite", ];
N: 54 "Finite_rec" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 56 "Finite_rect" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 53 "Finite_sind" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 113 "compute_fin_ind_fin_zero" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 112 "compute_fin_ind_fsucc" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 110 "compute_fin_rec_fin_zero" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 109 "compute_fin_rec_fsucc" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 97 "compute_finnat_ind_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 98 "compute_finnat_ind_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 59 "compute_finseq_ind_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 60 "compute_finseq_ind_fsnil" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 74 "compute_fshead" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 75 "compute_fshead'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 70 "compute_fstail" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 71 "compute_fstail'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 64 "compute_path_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 66 "compute_path_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 153 "contr_fin1" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 155 "decidable_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 33 "decidable_finite_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 32 "decidable_merely_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 154 "decidablepaths_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 34 "decidablepaths_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 7 "detachable_finite_subset" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 8 "detachable_image_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 123 "equiv_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 83 "equiv_fin_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 52 "fcard" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 22 "fcard_arrow" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 20 "fcard_aut" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 14 "fcard_domain" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 45 "fcard_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 44 "fcard_equiv'" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 11 "fcard_forall" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 24 "fcard_prod" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 5 "fcard_quotient" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 17 "fcard_sigma" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 35 "fcard_succ" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 26 "fcard_sum" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 152 "fin_empty" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 131 "fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 130 "fin_equiv'" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 129 "fin_equiv_hfiber" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 126 "fin_equiv_inj_fst" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 125 "fin_equiv_inj_snd" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 128 "fin_equiv_inv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 127 "fin_equiv_issect" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 149 "fin_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 114 "fin_ind" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 150 "fin_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 116 "fin_nat" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 111 "fin_rec" [body=yes, kind=cnst, prop=no, path="FinInduction", ];
N: 95 "fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 156 "fin_to_nat" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 141 "fin_transpose_last_two" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 140 "fin_transpose_last_two_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 139 "fin_transpose_last_two_nextlast" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 138 "fin_transpose_last_two_rest" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 137 "fin_transpose_last_with" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 132 "fin_transpose_last_with_invol" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 136 "fin_transpose_last_with_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 133 "fin_transpose_last_with_last_other" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 134 "fin_transpose_last_with_rest" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 135 "fin_transpose_last_with_with" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 151 "fin_zero" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 18 "finadd" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 16 "finadd_const" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 21 "finite_aut" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 29 "finite_choice" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 40 "finite_contr" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 39 "finite_decidable_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 9 "finite_detachable_subset" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 42 "finite_empty" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 1 "finite_enumeration_repeats" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 2 "finite_enumeration_stage" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 48 "finite_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 47 "finite_equiv'" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 46 "finite_equiv_equiv" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 43 "finite_fin" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 23 "finite_forall" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 15 "finite_hfiber" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 13 "finite_image" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 30 "finite_ind_hprop" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 38 "finite_merely" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 37 "finite_paths" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 25 "finite_prod" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 6 "finite_quotient" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 19 "finite_sigma" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 36 "finite_succ" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 27 "finite_sum" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 41 "finite_unit" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 12 "finmult" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 10 "finmult_const" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 99 "finnat_ind" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 94 "finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 61 "finseq_ind" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 78 "fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 79 "fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 76 "fshead" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 77 "fshead'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 81 "fsnil" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 72 "fstail" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 73 "fstail'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 148 "fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 117 "fsucc_mod" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 3 "geq_surj_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 101 "incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 96 "is_bounded_fin_to_nat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 147 "isembedding_fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 124 "isequiv_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 49 "ishprop_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 28 "isprojective_fin_n" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 50 "issig_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 103 "last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 4 "leq_inj_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 31 "merely_decidable_finite" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 51 "merely_equiv_fin" [body=yes, kind=cnst, prop=no, path="Finite", ];
N: 122 "nat_eq_fin_equiv" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 121 "nat_fin" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 119 "nat_fin_compl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 118 "nat_fin_compl_compl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 120 "nat_fin_inl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 68 "path_expand_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 69 "path_expand_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 62 "path_expand_fscons_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 63 "path_expand_fscons_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 146 "path_fin_fsucc_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 91 "path_fin_to_finnat_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 90 "path_fin_to_finnat_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 92 "path_fin_to_finnat_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 93 "path_fin_to_finnat_fsucc" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 84 "path_fin_to_finnat_to_fin" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 87 "path_finnat_to_fin_incl" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 86 "path_finnat_to_fin_last" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 89 "path_finnat_to_fin_succ" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 85 "path_finnat_to_fin_to_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 88 "path_finnat_to_fin_zero" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 65 "path_fscons" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 67 "path_fscons'" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 80 "path_fsnil" [body=yes, kind=cnst, prop=no, path="FinSeq", ];
N: 100 "path_incl_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 102 "path_last_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 145 "path_nat_fin_incl" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 142 "path_nat_fin_last" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 143 "path_nat_fin_zero" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 144 "path_nat_fsucc" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 104 "path_succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 106 "path_zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 115 "sperners_lemma_1d" [body=yes, kind=cnst, prop=no, path="Fin", ];
N: 105 "succ_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 107 "zero_finnat" [body=yes, kind=cnst, prop=no, path="FinNat", ];
N: 58 "Finite" [kind=inductive, prop=no, path="Finite", ];
N: 57 "Build_Finite" [kind=construct, prop=no, path="Finite", ];
E: 1 2 [weight=1, ];
E: 1 4 [weight=1, ];
E: 1 43 [weight=2, ];
E: 1 58 [weight=2, ];
E: 1 121 [weight=1, ];
E: 1 157 [weight=6, ];
E: 2 8 [weight=1, ];
E: 2 34 [weight=1, ];
E: 2 43 [weight=1, ];
E: 2 58 [weight=2, ];
E: 2 118 [weight=1, ];
E: 2 119 [weight=2, ];
E: 2 121 [weight=10, ];
E: 2 157 [weight=136, ];
E: 3 4 [weight=1, ];
E: 3 28 [weight=1, ];
E: 3 43 [weight=2, ];
E: 3 57 [weight=2, ];
E: 3 58 [weight=4, ];
E: 3 154 [weight=1, ];
E: 3 157 [weight=136, ];
E: 4 57 [weight=2, ];
E: 4 58 [weight=4, ];
E: 4 134 [weight=1, ];
E: 4 135 [weight=1, ];
E: 4 136 [weight=1, ];
E: 4 137 [weight=18, ];
E: 4 157 [weight=192, ];
E: 5 6 [weight=14, ];
E: 5 9 [weight=10, ];
E: 5 14 [weight=1, ];
E: 5 18 [weight=4, ];
E: 5 19 [weight=9, ];
E: 5 37 [weight=9, ];
E: 5 44 [weight=1, ];
E: 5 58 [weight=2, ];
E: 6 19 [weight=1, ];
E: 6 32 [weight=1, ];
E: 6 36 [weight=1, ];
E: 6 39 [weight=1, ];
E: 6 42 [weight=1, ];
E: 6 43 [weight=1, ];
E: 6 47 [weight=3, ];
E: 6 48 [weight=1, ];
E: 6 49 [weight=2, ];
E: 6 58 [weight=10, ];
E: 6 157 [weight=458, ];
E: 7 8 [weight=1, ];
E: 7 58 [weight=4, ];
E: 8 19 [weight=1, ];
E: 8 37 [weight=1, ];
E: 8 58 [weight=5, ];
E: 8 157 [weight=15, ];
E: 9 19 [weight=1, ];
E: 9 39 [weight=1, ];
E: 9 58 [weight=3, ];
E: 10 12 [weight=1, ];
E: 10 22 [weight=1, ];
E: 10 43 [weight=1, ];
E: 10 58 [weight=2, ];
E: 10 157 [weight=1, ];
E: 11 12 [weight=5, ];
E: 11 23 [weight=7, ];
E: 11 29 [weight=1, ];
E: 11 43 [weight=1, ];
E: 11 44 [weight=1, ];
E: 11 58 [weight=4, ];
E: 11 157 [weight=15, ];
E: 12 23 [weight=1, ];
E: 12 43 [weight=1, ];
E: 12 58 [weight=2, ];
E: 12 157 [weight=1, ];
E: 13 19 [weight=2, ];
E: 13 37 [weight=1, ];
E: 13 38 [weight=1, ];
E: 13 58 [weight=5, ];
E: 14 17 [weight=1, ];
E: 14 18 [weight=2, ];
E: 14 19 [weight=7, ];
E: 14 37 [weight=5, ];
E: 14 44 [weight=1, ];
E: 14 58 [weight=4, ];
E: 15 19 [weight=1, ];
E: 15 37 [weight=1, ];
E: 15 58 [weight=5, ];
E: 16 18 [weight=2, ];
E: 16 19 [weight=1, ];
E: 16 24 [weight=1, ];
E: 16 25 [weight=2, ];
E: 16 43 [weight=4, ];
E: 16 44 [weight=1, ];
E: 16 58 [weight=2, ];
E: 16 157 [weight=7, ];
E: 17 18 [weight=5, ];
E: 17 19 [weight=7, ];
E: 17 29 [weight=1, ];
E: 17 43 [weight=1, ];
E: 17 44 [weight=1, ];
E: 17 58 [weight=4, ];
E: 17 157 [weight=15, ];
E: 18 19 [weight=1, ];
E: 18 43 [weight=1, ];
E: 18 58 [weight=2, ];
E: 18 157 [weight=1, ];
E: 19 27 [weight=1, ];
E: 19 42 [weight=1, ];
E: 19 47 [weight=1, ];
E: 19 48 [weight=3, ];
E: 19 49 [weight=1, ];
E: 19 58 [weight=15, ];
E: 19 157 [weight=66, ];
E: 20 21 [weight=18, ];
E: 20 24 [weight=1, ];
E: 20 25 [weight=3, ];
E: 20 43 [weight=18, ];
E: 20 45 [weight=2, ];
E: 20 58 [weight=2, ];
E: 20 123 [weight=3, ];
E: 20 157 [weight=57, ];
E: 21 25 [weight=1, ];
E: 21 40 [weight=1, ];
E: 21 43 [weight=1, ];
E: 21 48 [weight=2, ];
E: 21 49 [weight=1, ];
E: 21 58 [weight=7, ];
E: 21 123 [weight=2, ];
E: 21 157 [weight=32, ];
E: 22 23 [weight=32, ];
E: 22 24 [weight=1, ];
E: 22 25 [weight=3, ];
E: 22 41 [weight=10, ];
E: 22 43 [weight=19, ];
E: 22 45 [weight=4, ];
E: 22 58 [weight=4, ];
E: 22 157 [weight=40, ];
E: 23 25 [weight=1, ];
E: 23 40 [weight=1, ];
E: 23 47 [weight=1, ];
E: 23 48 [weight=2, ];
E: 23 49 [weight=1, ];
E: 23 58 [weight=14, ];
E: 23 157 [weight=31, ];
E: 24 25 [weight=30, ];
E: 24 26 [weight=1, ];
E: 24 27 [weight=3, ];
E: 24 41 [weight=9, ];
E: 24 42 [weight=2, ];
E: 24 43 [weight=23, ];
E: 24 44 [weight=2, ];
E: 24 45 [weight=3, ];
E: 24 58 [weight=4, ];
E: 24 157 [weight=32, ];
E: 25 27 [weight=1, ];
E: 25 42 [weight=1, ];
E: 25 48 [weight=4, ];
E: 25 49 [weight=1, ];
E: 25 58 [weight=8, ];
E: 25 157 [weight=11, ];
E: 26 27 [weight=17, ];
E: 26 36 [weight=2, ];
E: 26 42 [weight=1, ];
E: 26 43 [weight=17, ];
E: 26 44 [weight=1, ];
E: 26 45 [weight=3, ];
E: 26 58 [weight=4, ];
E: 26 157 [weight=17, ];
E: 27 36 [weight=1, ];
E: 27 48 [weight=3, ];
E: 27 49 [weight=1, ];
E: 27 58 [weight=8, ];
E: 27 157 [weight=11, ];
E: 28 29 [weight=1, ];
E: 28 43 [weight=1, ];
E: 28 157 [weight=7, ];
E: 29 58 [weight=2, ];
E: 29 157 [weight=46, ];
E: 30 36 [weight=4, ];
E: 30 42 [weight=2, ];
E: 30 43 [weight=12, ];
E: 30 49 [weight=2, ];
E: 30 58 [weight=16, ];
E: 30 157 [weight=27, ];
E: 31 32 [weight=1, ];
E: 31 58 [weight=2, ];
E: 32 33 [weight=1, ];
E: 32 38 [weight=1, ];
E: 32 58 [weight=2, ];
E: 33 58 [weight=2, ];
E: 33 157 [weight=11, ];
E: 34 58 [weight=2, ];
E: 34 154 [weight=1, ];
E: 34 157 [weight=7, ];
E: 35 36 [weight=2, ];
E: 35 58 [weight=2, ];
E: 36 57 [weight=1, ];
E: 36 58 [weight=3, ];
E: 36 157 [weight=8, ];
E: 37 39 [weight=1, ];
E: 37 48 [weight=1, ];
E: 37 49 [weight=1, ];
E: 37 58 [weight=4, ];
E: 37 154 [weight=2, ];
E: 37 157 [weight=15, ];
E: 38 39 [weight=2, ];
E: 38 58 [weight=4, ];
E: 38 157 [weight=11, ];
E: 39 40 [weight=1, ];
E: 39 42 [weight=1, ];
E: 39 48 [weight=1, ];
E: 39 58 [weight=2, ];
E: 40 41 [weight=1, ];
E: 40 48 [weight=1, ];
E: 40 58 [weight=1, ];
E: 41 43 [weight=1, ];
E: 41 47 [weight=1, ];
E: 41 58 [weight=1, ];
E: 41 157 [weight=2, ];
E: 42 43 [weight=1, ];
E: 42 58 [weight=1, ];
E: 43 57 [weight=1, ];
E: 43 58 [weight=1, ];
E: 43 157 [weight=5, ];
E: 44 45 [weight=1, ];
E: 44 58 [weight=4, ];
E: 45 48 [weight=4, ];
E: 45 49 [weight=1, ];
E: 45 52 [weight=1, ];
E: 45 58 [weight=6, ];
E: 46 47 [weight=2, ];
E: 46 49 [weight=2, ];
E: 46 58 [weight=4, ];
E: 47 48 [weight=1, ];
E: 47 58 [weight=2, ];
E: 48 57 [weight=1, ];
E: 48 58 [weight=3, ];
E: 48 157 [weight=9, ];
E: 49 50 [weight=1, ];
E: 49 58 [weight=2, ];
E: 49 122 [weight=1, ];
E: 49 157 [weight=16, ];
E: 50 57 [weight=8, ];
E: 50 58 [weight=12, ];
E: 50 157 [weight=21, ];
E: 51 58 [weight=2, ];
E: 51 157 [weight=1, ];
E: 52 58 [weight=2, ];
E: 53 57 [weight=2, ];
E: 53 58 [weight=4, ];
E: 53 157 [weight=2, ];
E: 54 56 [weight=1, ];
E: 54 57 [weight=1, ];
E: 54 58 [weight=3, ];
E: 54 157 [weight=1, ];
E: 55 57 [weight=2, ];
E: 55 58 [weight=4, ];
E: 55 157 [weight=2, ];
E: 56 57 [weight=2, ];
E: 56 58 [weight=4, ];
E: 56 157 [weight=2, ];
E: 57 157 [weight=1, ];
E: 58 157 [weight=1, ];
E: 59 61 [weight=11, ];
E: 59 62 [weight=1, ];
E: 59 64 [weight=1, ];
E: 59 65 [weight=7, ];
E: 59 68 [weight=3, ];
E: 59 70 [weight=5, ];
E: 59 72 [weight=50, ];
E: 59 74 [weight=5, ];
E: 59 76 [weight=39, ];
E: 59 78 [weight=127, ];
E: 59 81 [weight=2, ];
E: 59 82 [weight=22, ];
E: 60 61 [weight=1, ];
E: 60 78 [weight=2, ];
E: 60 80 [weight=3, ];
E: 60 81 [weight=24, ];
E: 60 82 [weight=17, ];
E: 61 68 [weight=1, ];
E: 61 72 [weight=3, ];
E: 61 76 [weight=2, ];
E: 61 78 [weight=3, ];
E: 61 80 [weight=1, ];
E: 61 81 [weight=3, ];
E: 61 82 [weight=12, ];
E: 62 63 [weight=1, ];
E: 62 65 [weight=1, ];
E: 62 67 [weight=8, ];
E: 62 68 [weight=1, ];
E: 62 69 [weight=4, ];
E: 62 70 [weight=4, ];
E: 62 71 [weight=10, ];
E: 62 72 [weight=21, ];
E: 62 73 [weight=19, ];
E: 62 74 [weight=9, ];
E: 62 76 [weight=18, ];
E: 62 78 [weight=62, ];
E: 62 79 [weight=19, ];
E: 62 82 [weight=3, ];
E: 62 157 [weight=64, ];
E: 63 67 [weight=5, ];
E: 63 69 [weight=5, ];
E: 63 71 [weight=55, ];
E: 63 72 [weight=11, ];
E: 63 73 [weight=117, ];
E: 63 74 [weight=36, ];
E: 63 75 [weight=22, ];
E: 63 76 [weight=42, ];
E: 63 77 [weight=143, ];
E: 63 78 [weight=31, ];
E: 63 79 [weight=437, ];
E: 63 82 [weight=88, ];
E: 63 112 [weight=2, ];
E: 63 113 [weight=2, ];
E: 63 114 [weight=7, ];
E: 63 148 [weight=82, ];
E: 63 151 [weight=86, ];
E: 63 157 [weight=54, ];
E: 64 65 [weight=1, ];
E: 64 66 [weight=1, ];
E: 64 67 [weight=4, ];
E: 64 78 [weight=35, ];
E: 64 82 [weight=15, ];
E: 64 157 [weight=43, ];
E: 65 67 [weight=1, ];
E: 65 78 [weight=6, ];
E: 65 82 [weight=7, ];
E: 65 157 [weight=8, ];
E: 66 67 [weight=5, ];
E: 66 71 [weight=19, ];
E: 66 73 [weight=18, ];
E: 66 74 [weight=19, ];
E: 66 76 [weight=23, ];
E: 66 78 [weight=23, ];
E: 66 79 [weight=102, ];
E: 66 82 [weight=50, ];
E: 66 112 [weight=1, ];
E: 66 113 [weight=1, ];
E: 66 114 [weight=3, ];
E: 66 148 [weight=34, ];
E: 66 151 [weight=29, ];
E: 66 157 [weight=41, ];
E: 67 71 [weight=2, ];
E: 67 73 [weight=3, ];
E: 67 74 [weight=2, ];
E: 67 76 [weight=4, ];
E: 67 78 [weight=4, ];
E: 67 79 [weight=10, ];
E: 67 82 [weight=12, ];
E: 67 114 [weight=1, ];
E: 67 148 [weight=1, ];
E: 67 157 [weight=10, ];
E: 68 69 [weight=1, ];
E: 68 72 [weight=3, ];
E: 68 76 [weight=3, ];
E: 68 78 [weight=3, ];
E: 68 82 [weight=3, ];
E: 68 157 [weight=5, ];
E: 69 71 [weight=1, ];
E: 69 72 [weight=1, ];
E: 69 73 [weight=4, ];
E: 69 74 [weight=1, ];
E: 69 76 [weight=1, ];
E: 69 77 [weight=3, ];
E: 69 79 [weight=3, ];
E: 69 82 [weight=6, ];
E: 69 114 [weight=1, ];
E: 69 151 [weight=1, ];
E: 69 157 [weight=4, ];
E: 70 71 [weight=1, ];
E: 70 72 [weight=3, ];
E: 70 78 [weight=3, ];
E: 70 82 [weight=3, ];
E: 70 157 [weight=5, ];
E: 71 73 [weight=4, ];
E: 71 79 [weight=4, ];
E: 71 82 [weight=21, ];
E: 71 109 [weight=1, ];
E: 71 111 [weight=2, ];
E: 71 148 [weight=1, ];
E: 71 157 [weight=12, ];
E: 72 73 [weight=1, ];
E: 72 82 [weight=2, ];
E: 73 82 [weight=6, ];
E: 73 148 [weight=1, ];
E: 73 157 [weight=1, ];
E: 74 75 [weight=1, ];
E: 74 76 [weight=1, ];
E: 74 78 [weight=1, ];
E: 74 82 [weight=2, ];
E: 75 77 [weight=3, ];
E: 75 79 [weight=3, ];
E: 75 82 [weight=16, ];
E: 75 110 [weight=1, ];
E: 75 111 [weight=1, ];
E: 75 151 [weight=1, ];
E: 75 157 [weight=2, ];
E: 76 77 [weight=1, ];
E: 76 82 [weight=1, ];
E: 77 82 [weight=4, ];
E: 77 151 [weight=1, ];
E: 78 79 [weight=1, ];
E: 78 82 [weight=2, ];
E: 79 82 [weight=7, ];
E: 79 111 [weight=1, ];
E: 79 157 [weight=2, ];
E: 80 81 [weight=2, ];
E: 80 82 [weight=4, ];
E: 81 82 [weight=1, ];
E: 82 157 [weight=1, ];
E: 83 84 [weight=1, ];
E: 83 85 [weight=1, ];
E: 83 94 [weight=1, ];
E: 83 95 [weight=1, ];
E: 83 108 [weight=2, ];
E: 83 157 [weight=2, ];
E: 84 86 [weight=1, ];
E: 84 87 [weight=1, ];
E: 84 94 [weight=10, ];
E: 84 95 [weight=11, ];
E: 84 101 [weight=1, ];
E: 84 149 [weight=2, ];
E: 84 157 [weight=21, ];
E: 85 92 [weight=1, ];
E: 85 93 [weight=1, ];
E: 85 94 [weight=8, ];
E: 85 95 [weight=13, ];
E: 85 105 [weight=2, ];
E: 85 107 [weight=1, ];
E: 85 108 [weight=30, ];
E: 85 148 [weight=7, ];
E: 85 151 [weight=6, ];
E: 85 157 [weight=20, ];
E: 86 94 [weight=4, ];
E: 86 103 [weight=4, ];
E: 86 148 [weight=1, ];
E: 86 150 [weight=5, ];
E: 86 157 [weight=6, ];
E: 87 89 [weight=1, ];
E: 87 94 [weight=29, ];
E: 87 101 [weight=23, ];
E: 87 104 [weight=1, ];
E: 87 105 [weight=10, ];
E: 87 108 [weight=9, ];
E: 87 148 [weight=5, ];
E: 87 149 [weight=9, ];
E: 87 157 [weight=19, ];
E: 88 94 [weight=1, ];
E: 88 107 [weight=1, ];
E: 88 151 [weight=2, ];
E: 88 157 [weight=2, ];
E: 89 94 [weight=9, ];
E: 89 105 [weight=2, ];
E: 89 108 [weight=4, ];
E: 89 148 [weight=5, ];
E: 89 157 [weight=8, ];
E: 90 95 [weight=1, ];
E: 90 103 [weight=2, ];
E: 90 108 [weight=2, ];
E: 90 150 [weight=1, ];
E: 91 95 [weight=3, ];
E: 91 101 [weight=2, ];
E: 91 108 [weight=2, ];
E: 91 149 [weight=1, ];
E: 91 157 [weight=2, ];
E: 92 95 [weight=2, ];
E: 92 107 [weight=2, ];
E: 92 108 [weight=1, ];
E: 92 143 [weight=1, ];
E: 92 151 [weight=2, ];
E: 93 95 [weight=4, ];
E: 93 105 [weight=2, ];
E: 93 108 [weight=1, ];
E: 93 144 [weight=1, ];
E: 93 148 [weight=2, ];
E: 93 157 [weight=2, ];
E: 94 108 [weight=5, ];
E: 94 148 [weight=1, ];
E: 94 151 [weight=1, ];
E: 94 157 [weight=5, ];
E: 95 96 [weight=1, ];
E: 95 108 [weight=1, ];
E: 95 156 [weight=1, ];
E: 95 157 [weight=2, ];
E: 96 156 [weight=7, ];
E: 96 157 [weight=10, ];
E: 97 99 [weight=13, ];
E: 97 104 [weight=7, ];
E: 97 105 [weight=34, ];
E: 97 107 [weight=2, ];
E: 97 108 [weight=19, ];
E: 98 99 [weight=1, ];
E: 98 105 [weight=2, ];
E: 98 106 [weight=3, ];
E: 98 107 [weight=20, ];
E: 98 108 [weight=11, ];
E: 99 104 [weight=1, ];
E: 99 105 [weight=3, ];
E: 99 106 [weight=1, ];
E: 99 107 [weight=3, ];
E: 99 108 [weight=12, ];
E: 100 101 [weight=2, ];
E: 100 108 [weight=3, ];
E: 101 108 [weight=3, ];
E: 102 103 [weight=2, ];
E: 102 108 [weight=1, ];
E: 103 108 [weight=1, ];
E: 104 105 [weight=2, ];
E: 104 108 [weight=3, ];
E: 105 108 [weight=3, ];
E: 106 107 [weight=2, ];
E: 106 108 [weight=1, ];
E: 107 108 [weight=1, ];
E: 109 111 [weight=2, ];
E: 109 112 [weight=1, ];
E: 109 148 [weight=1, ];
E: 109 157 [weight=5, ];
E: 110 111 [weight=1, ];
E: 110 113 [weight=1, ];
E: 110 151 [weight=1, ];
E: 110 157 [weight=3, ];
E: 111 114 [weight=1, ];
E: 111 157 [weight=3, ];
E: 112 84 [weight=5, ];
E: 112 89 [weight=22, ];
E: 112 93 [weight=1, ];
E: 112 94 [weight=186, ];
E: 112 95 [weight=95, ];
E: 112 97 [weight=1, ];
E: 112 99 [weight=14, ];
E: 112 105 [weight=64, ];
E: 112 108 [weight=38, ];
E: 112 114 [weight=4, ];
E: 112 148 [weight=75, ];
E: 112 151 [weight=2, ];
E: 112 154 [weight=1, ];
E: 112 157 [weight=84, ];
E: 113 84 [weight=1, ];
E: 113 89 [weight=6, ];
E: 113 92 [weight=1, ];
E: 113 94 [weight=55, ];
E: 113 95 [weight=3, ];
E: 113 98 [weight=1, ];
E: 113 99 [weight=5, ];
E: 113 105 [weight=12, ];
E: 113 107 [weight=19, ];
E: 113 108 [weight=18, ];
E: 113 114 [weight=2, ];
E: 113 148 [weight=14, ];
E: 113 151 [weight=21, ];
E: 113 154 [weight=1, ];
E: 113 157 [weight=29, ];
E: 114 84 [weight=1, ];
E: 114 89 [weight=1, ];
E: 114 94 [weight=8, ];
E: 114 95 [weight=2, ];
E: 114 99 [weight=1, ];
E: 114 105 [weight=2, ];
E: 114 108 [weight=2, ];
E: 114 148 [weight=4, ];
E: 114 151 [weight=2, ];
E: 114 157 [weight=9, ];
E: 115 148 [weight=13, ];
E: 115 149 [weight=32, ];
E: 115 150 [weight=18, ];
E: 115 151 [weight=9, ];
E: 115 157 [weight=42, ];
E: 116 117 [weight=1, ];
E: 116 151 [weight=1, ];
E: 116 157 [weight=3, ];
E: 117 148 [weight=1, ];
E: 117 151 [weight=1, ];
E: 117 157 [weight=9, ];
E: 118 119 [weight=17, ];
E: 118 121 [weight=17, ];
E: 118 157 [weight=13, ];
E: 119 157 [weight=9, ];
E: 120 121 [weight=3, ];
E: 120 157 [weight=4, ];
E: 121 157 [weight=9, ];
E: 122 128 [weight=1, ];
E: 122 157 [weight=28, ];
E: 123 124 [weight=1, ];
E: 123 130 [weight=1, ];
E: 123 157 [weight=10, ];
E: 124 125 [weight=2, ];
E: 124 126 [weight=2, ];
E: 124 127 [weight=1, ];
E: 124 128 [weight=3, ];
E: 124 130 [weight=43, ];
E: 124 154 [weight=1, ];
E: 124 157 [weight=348, ];
E: 125 131 [weight=10, ];
E: 125 136 [weight=2, ];
E: 125 137 [weight=6, ];
E: 125 157 [weight=54, ];
E: 126 131 [weight=9, ];
E: 126 136 [weight=2, ];
E: 126 137 [weight=2, ];
E: 126 157 [weight=31, ];
E: 127 128 [weight=1, ];
E: 127 129 [weight=1, ];
E: 127 130 [weight=1, ];
E: 127 157 [weight=7, ];
E: 128 129 [weight=1, ];
E: 128 157 [weight=7, ];
E: 129 130 [weight=13, ];
E: 129 132 [weight=1, ];
E: 129 133 [weight=1, ];
E: 129 134 [weight=4, ];
E: 129 135 [weight=4, ];
E: 129 136 [weight=12, ];
E: 129 137 [weight=104, ];
E: 129 157 [weight=2030, ];
E: 130 131 [weight=1, ];
E: 130 157 [weight=8, ];
E: 131 137 [weight=1, ];
E: 131 157 [weight=13, ];
E: 132 133 [weight=2, ];
E: 132 134 [weight=2, ];
E: 132 135 [weight=2, ];
E: 132 136 [weight=2, ];
E: 132 137 [weight=26, ];
E: 132 154 [weight=1, ];
E: 132 157 [weight=96, ];
E: 133 137 [weight=2, ];
E: 133 157 [weight=9, ];
E: 134 137 [weight=15, ];
E: 134 157 [weight=201, ];
E: 135 137 [weight=14, ];
E: 135 157 [weight=58, ];
E: 136 137 [weight=14, ];
E: 136 157 [weight=66, ];
E: 137 141 [weight=3, ];
E: 137 157 [weight=32, ];
E: 138 141 [weight=2, ];
E: 138 157 [weight=10, ];
E: 139 141 [weight=2, ];
E: 139 157 [weight=2, ];
E: 140 141 [weight=2, ];
E: 140 157 [weight=2, ];
E: 141 157 [weight=2, ];
E: 142 150 [weight=2, ];
E: 142 156 [weight=2, ];
E: 143 151 [weight=4, ];
E: 143 156 [weight=4, ];
E: 144 145 [weight=1, ];
E: 144 146 [weight=1, ];
E: 144 148 [weight=12, ];
E: 144 149 [weight=3, ];
E: 144 156 [weight=20, ];
E: 144 157 [weight=15, ];
E: 145 149 [weight=2, ];
E: 145 156 [weight=3, ];
E: 145 157 [weight=2, ];
E: 146 148 [weight=3, ];
E: 146 149 [weight=3, ];
E: 146 157 [weight=4, ];
E: 147 148 [weight=41, ];
E: 147 154 [weight=1, ];
E: 147 157 [weight=120, ];
E: 148 157 [weight=11, ];
E: 149 157 [weight=4, ];
E: 150 157 [weight=1, ];
E: 151 157 [weight=4, ];
E: 152 157 [weight=5, ];
E: 153 157 [weight=1, ];
E: 154 157 [weight=7, ];
E: 155 157 [weight=3, ];
E: 156 157 [weight=4, ];
