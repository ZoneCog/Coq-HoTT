N: 52 "Pushout" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 44 "Pushout_ind" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 41 "Pushout_ind_beta_pglue" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 43 "Pushout_ind_beta_pushl" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 42 "Pushout_ind_beta_pushr" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 40 "Pushout_rec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 39 "Pushout_rec_beta_pglue" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 25 "contr_pushout" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 35 "equiv_Pushout_rec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 27 "equiv_pushout" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 7 "equiv_pushout_assoc" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 9 "equiv_pushout_assoc_subproof" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 8 "equiv_pushout_assoc_subproof0" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 1 "equiv_pushout_flatten" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 26 "equiv_pushout_pglue" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 34 "equiv_pushout_unrec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 20 "equiv_sigma_pushout" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 24 "esp1" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 23 "esp1_beta_pglue" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 22 "esp2" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 21 "esp2_beta_pglue" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 29 "functor_pushout" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 28 "functor_pushout_homotopic" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 36 "isequiv_Pushout_rec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 5 "isequiv_pushout_isequiv" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 3 "isequiv_pushout_isequiv'" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 4 "isequiv_pushout_isequiv'_subproof" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 6 "isequiv_pushout_isequiv_subproof" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 48 "pglue" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 45 "pglue'" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 51 "push" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 50 "pushl" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 47 "pushl'" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 19 "pushout_assoc_left" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 18 "pushout_assoc_left_ind" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 17 "pushout_assoc_left_rec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 16 "pushout_assoc_left_rec_beta_pgluell" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 15 "pushout_assoc_left_rec_beta_pgluelr" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 14 "pushout_assoc_right" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 13 "pushout_assoc_right_ind" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 12 "pushout_assoc_right_rec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 11 "pushout_assoc_right_rec_beta_pgluerl" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 10 "pushout_assoc_right_rec_beta_pgluerr" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 2 "pushout_flatten_fam" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 37 "pushout_rec_unrec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 30 "pushout_sym" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 33 "pushout_sym_map" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 38 "pushout_unrec" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 49 "pushr" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 46 "pushr'" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 31 "sect_pushout_sym_map" [body=yes, kind=cnst, prop=no, path="Pushout", ];
N: 32 "sect_pushout_sym_map_subproof" [body=yes, kind=cnst, prop=no, path="Pushout", ];
E: 1 2 [weight=2, ];
E: 1 52 [weight=6, ];
E: 2 40 [weight=1, ];
E: 2 52 [weight=1, ];
E: 3 4 [weight=1, ];
E: 3 40 [weight=9, ];
E: 3 44 [weight=1, ];
E: 3 46 [weight=2, ];
E: 3 47 [weight=12, ];
E: 3 48 [weight=3, ];
E: 3 49 [weight=8, ];
E: 3 50 [weight=5, ];
E: 3 52 [weight=60, ];
E: 4 39 [weight=1, ];
E: 4 40 [weight=105, ];
E: 4 45 [weight=1, ];
E: 4 46 [weight=13, ];
E: 4 47 [weight=117, ];
E: 4 48 [weight=43, ];
E: 4 49 [weight=140, ];
E: 4 50 [weight=97, ];
E: 4 52 [weight=168, ];
E: 5 6 [weight=1, ];
E: 5 40 [weight=9, ];
E: 5 44 [weight=1, ];
E: 5 46 [weight=14, ];
E: 5 47 [weight=4, ];
E: 5 48 [weight=3, ];
E: 5 49 [weight=6, ];
E: 5 50 [weight=7, ];
E: 5 52 [weight=62, ];
E: 6 39 [weight=1, ];
E: 6 40 [weight=121, ];
E: 6 45 [weight=1, ];
E: 6 46 [weight=122, ];
E: 6 47 [weight=46, ];
E: 6 48 [weight=51, ];
E: 6 49 [weight=143, ];
E: 6 50 [weight=138, ];
E: 6 52 [weight=207, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 7 12 [weight=1, ];
E: 7 14 [weight=6, ];
E: 7 17 [weight=1, ];
E: 7 19 [weight=6, ];
E: 7 45 [weight=4, ];
E: 7 46 [weight=16, ];
E: 7 47 [weight=16, ];
E: 7 49 [weight=2, ];
E: 7 50 [weight=2, ];
E: 7 52 [weight=60, ];
E: 8 10 [weight=1, ];
E: 8 11 [weight=1, ];
E: 8 12 [weight=129, ];
E: 8 14 [weight=158, ];
E: 8 15 [weight=1, ];
E: 8 16 [weight=1, ];
E: 8 17 [weight=135, ];
E: 8 18 [weight=1, ];
E: 8 19 [weight=205, ];
E: 8 45 [weight=8, ];
E: 8 46 [weight=188, ];
E: 8 47 [weight=40, ];
E: 8 49 [weight=4, ];
E: 8 50 [weight=4, ];
E: 8 52 [weight=496, ];
E: 9 10 [weight=1, ];
E: 9 11 [weight=1, ];
E: 9 12 [weight=135, ];
E: 9 13 [weight=1, ];
E: 9 14 [weight=205, ];
E: 9 15 [weight=1, ];
E: 9 16 [weight=1, ];
E: 9 17 [weight=129, ];
E: 9 19 [weight=158, ];
E: 9 45 [weight=8, ];
E: 9 46 [weight=40, ];
E: 9 47 [weight=188, ];
E: 9 49 [weight=4, ];
E: 9 50 [weight=4, ];
E: 9 52 [weight=496, ];
E: 10 12 [weight=15, ];
E: 10 14 [weight=5, ];
E: 10 39 [weight=1, ];
E: 10 45 [weight=5, ];
E: 10 46 [weight=26, ];
E: 10 47 [weight=37, ];
E: 10 49 [weight=2, ];
E: 10 50 [weight=2, ];
E: 10 52 [weight=73, ];
E: 11 12 [weight=6, ];
E: 11 14 [weight=5, ];
E: 11 39 [weight=1, ];
E: 11 40 [weight=1, ];
E: 11 45 [weight=2, ];
E: 11 46 [weight=3, ];
E: 11 47 [weight=18, ];
E: 11 52 [weight=32, ];
E: 12 14 [weight=1, ];
E: 12 40 [weight=2, ];
E: 12 47 [weight=1, ];
E: 12 52 [weight=1, ];
E: 13 14 [weight=15, ];
E: 13 44 [weight=2, ];
E: 13 45 [weight=7, ];
E: 13 46 [weight=20, ];
E: 13 47 [weight=47, ];
E: 13 49 [weight=9, ];
E: 13 50 [weight=2, ];
E: 13 52 [weight=98, ];
E: 14 47 [weight=1, ];
E: 14 52 [weight=3, ];
E: 15 17 [weight=6, ];
E: 15 19 [weight=5, ];
E: 15 39 [weight=1, ];
E: 15 40 [weight=1, ];
E: 15 45 [weight=2, ];
E: 15 46 [weight=18, ];
E: 15 47 [weight=3, ];
E: 15 52 [weight=32, ];
E: 16 17 [weight=15, ];
E: 16 19 [weight=5, ];
E: 16 39 [weight=1, ];
E: 16 45 [weight=5, ];
E: 16 46 [weight=37, ];
E: 16 47 [weight=26, ];
E: 16 49 [weight=2, ];
E: 16 50 [weight=2, ];
E: 16 52 [weight=73, ];
E: 17 19 [weight=1, ];
E: 17 40 [weight=2, ];
E: 17 46 [weight=1, ];
E: 17 52 [weight=1, ];
E: 18 19 [weight=15, ];
E: 18 44 [weight=2, ];
E: 18 45 [weight=7, ];
E: 18 46 [weight=48, ];
E: 18 47 [weight=17, ];
E: 18 49 [weight=2, ];
E: 18 50 [weight=9, ];
E: 18 52 [weight=93, ];
E: 19 46 [weight=1, ];
E: 19 52 [weight=3, ];
E: 20 21 [weight=2, ];
E: 20 22 [weight=150, ];
E: 20 23 [weight=2, ];
E: 20 24 [weight=126, ];
E: 20 44 [weight=2, ];
E: 20 48 [weight=61, ];
E: 20 49 [weight=172, ];
E: 20 50 [weight=152, ];
E: 20 52 [weight=478, ];
E: 21 22 [weight=6, ];
E: 21 39 [weight=1, ];
E: 21 40 [weight=9, ];
E: 21 48 [weight=18, ];
E: 21 49 [weight=34, ];
E: 21 50 [weight=34, ];
E: 21 52 [weight=57, ];
E: 22 40 [weight=1, ];
E: 22 48 [weight=1, ];
E: 22 49 [weight=5, ];
E: 22 50 [weight=5, ];
E: 22 52 [weight=14, ];
E: 23 24 [weight=84, ];
E: 23 39 [weight=1, ];
E: 23 40 [weight=9, ];
E: 23 48 [weight=32, ];
E: 23 49 [weight=78, ];
E: 23 50 [weight=56, ];
E: 23 52 [weight=228, ];
E: 24 40 [weight=1, ];
E: 24 48 [weight=1, ];
E: 24 49 [weight=2, ];
E: 24 50 [weight=2, ];
E: 24 52 [weight=6, ];
E: 25 44 [weight=1, ];
E: 25 48 [weight=14, ];
E: 25 49 [weight=46, ];
E: 25 50 [weight=59, ];
E: 25 52 [weight=58, ];
E: 26 27 [weight=3, ];
E: 26 48 [weight=3, ];
E: 26 49 [weight=13, ];
E: 26 50 [weight=13, ];
E: 26 52 [weight=17, ];
E: 27 52 [weight=2, ];
E: 28 29 [weight=2, ];
E: 28 52 [weight=3, ];
E: 29 52 [weight=4, ];
E: 30 31 [weight=2, ];
E: 30 33 [weight=2, ];
E: 30 52 [weight=4, ];
E: 31 32 [weight=1, ];
E: 31 33 [weight=8, ];
E: 31 44 [weight=1, ];
E: 31 48 [weight=1, ];
E: 31 49 [weight=4, ];
E: 31 50 [weight=3, ];
E: 31 52 [weight=41, ];
E: 32 33 [weight=94, ];
E: 32 39 [weight=2, ];
E: 32 40 [weight=10, ];
E: 32 48 [weight=38, ];
E: 32 49 [weight=122, ];
E: 32 50 [weight=94, ];
E: 32 52 [weight=124, ];
E: 33 40 [weight=1, ];
E: 33 48 [weight=1, ];
E: 33 49 [weight=2, ];
E: 33 50 [weight=2, ];
E: 33 52 [weight=4, ];
E: 34 35 [weight=1, ];
E: 34 52 [weight=2, ];
E: 35 36 [weight=1, ];
E: 35 40 [weight=1, ];
E: 35 52 [weight=2, ];
E: 36 37 [weight=1, ];
E: 36 38 [weight=7, ];
E: 36 39 [weight=1, ];
E: 36 40 [weight=17, ];
E: 36 48 [weight=5, ];
E: 36 49 [weight=8, ];
E: 36 50 [weight=8, ];
E: 36 52 [weight=18, ];
E: 37 39 [weight=1, ];
E: 37 40 [weight=15, ];
E: 37 44 [weight=1, ];
E: 37 48 [weight=24, ];
E: 37 49 [weight=51, ];
E: 37 50 [weight=50, ];
E: 37 52 [weight=50, ];
E: 38 48 [weight=1, ];
E: 38 49 [weight=4, ];
E: 38 50 [weight=4, ];
E: 38 52 [weight=3, ];
E: 39 40 [weight=3, ];
E: 39 48 [weight=1, ];
E: 39 49 [weight=2, ];
E: 39 50 [weight=2, ];
E: 39 52 [weight=1, ];
E: 40 52 [weight=1, ];
E: 41 44 [weight=3, ];
E: 41 48 [weight=4, ];
E: 41 49 [weight=10, ];
E: 41 50 [weight=7, ];
E: 41 52 [weight=6, ];
E: 42 44 [weight=2, ];
E: 42 48 [weight=2, ];
E: 42 49 [weight=10, ];
E: 42 50 [weight=4, ];
E: 42 52 [weight=4, ];
E: 43 44 [weight=2, ];
E: 43 48 [weight=2, ];
E: 43 49 [weight=6, ];
E: 43 50 [weight=8, ];
E: 43 52 [weight=4, ];
E: 44 48 [weight=2, ];
E: 44 49 [weight=6, ];
E: 44 50 [weight=4, ];
E: 44 51 [weight=1, ];
E: 44 52 [weight=7, ];
E: 45 48 [weight=1, ];
E: 45 49 [weight=1, ];
E: 45 50 [weight=1, ];
E: 45 52 [weight=1, ];
E: 46 49 [weight=1, ];
E: 46 52 [weight=1, ];
E: 47 50 [weight=1, ];
E: 47 52 [weight=1, ];
E: 48 49 [weight=1, ];
E: 48 50 [weight=1, ];
E: 48 52 [weight=1, ];
E: 49 51 [weight=1, ];
E: 49 52 [weight=1, ];
E: 50 51 [weight=1, ];
E: 50 52 [weight=1, ];
E: 51 52 [weight=1, ];
