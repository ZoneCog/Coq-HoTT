N: 16 "Build_CRing'" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 25 "CRing_ind" [body=yes, kind=cnst, prop=yes, path="CRing", ];
N: 24 "CRing_rec" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 26 "CRing_rect" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 23 "CRing_sind" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 21 "cring_commutative" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 17 "cring_negate" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 19 "cring_plus" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 22 "cring_ring" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 18 "cring_zero" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 1 "hasequiv_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 9 "ideal_intersection_is_product" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 10 "ideal_intersection_subset_product" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 12 "ideal_product_comm" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 11 "ideal_product_intersection_sum_subset'" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 13 "ideal_product_subset_product_commutative" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 8 "ideal_quotient_product" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 6 "ideal_quotient_product_left" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 7 "ideal_quotient_subset_prod" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 4 "is01cat_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 2 "is1cat_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 3 "is2graph_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 5 "isgraph_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 20 "issig_CRing" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 15 "rng_mult_comm" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 14 "rng_power_mult" [body=yes, kind=cnst, prop=no, path="CRing", ];
N: 28 "CRing" [kind=inductive, prop=no, path="CRing", ];
N: 27 "Build_CRing" [kind=construct, prop=no, path="CRing", ];
E: 1 2 [weight=1, ];
E: 1 3 [weight=1, ];
E: 1 4 [weight=1, ];
E: 1 5 [weight=1, ];
E: 1 22 [weight=1, ];
E: 1 28 [weight=2, ];
E: 2 3 [weight=1, ];
E: 2 4 [weight=1, ];
E: 2 5 [weight=1, ];
E: 2 22 [weight=1, ];
E: 2 28 [weight=2, ];
E: 3 5 [weight=1, ];
E: 3 22 [weight=1, ];
E: 3 28 [weight=2, ];
E: 4 5 [weight=1, ];
E: 4 22 [weight=1, ];
E: 4 28 [weight=2, ];
E: 5 22 [weight=1, ];
E: 5 28 [weight=2, ];
E: 6 7 [weight=1, ];
E: 6 28 [weight=2, ];
E: 7 15 [weight=1, ];
E: 7 28 [weight=2, ];
E: 8 15 [weight=6, ];
E: 8 17 [weight=6, ];
E: 8 28 [weight=2, ];
E: 9 10 [weight=1, ];
E: 9 28 [weight=2, ];
E: 10 11 [weight=1, ];
E: 10 28 [weight=2, ];
E: 11 12 [weight=1, ];
E: 11 28 [weight=2, ];
E: 12 13 [weight=2, ];
E: 12 28 [weight=2, ];
E: 13 15 [weight=1, ];
E: 13 28 [weight=2, ];
E: 14 15 [weight=1, ];
E: 14 28 [weight=2, ];
E: 15 28 [weight=2, ];
E: 16 27 [weight=1, ];
E: 16 28 [weight=1, ];
E: 17 28 [weight=2, ];
E: 18 28 [weight=2, ];
E: 19 28 [weight=2, ];
E: 20 27 [weight=8, ];
E: 20 28 [weight=12, ];
E: 21 28 [weight=2, ];
E: 22 28 [weight=2, ];
E: 23 27 [weight=2, ];
E: 23 28 [weight=4, ];
E: 24 26 [weight=1, ];
E: 24 27 [weight=1, ];
E: 24 28 [weight=3, ];
E: 25 27 [weight=2, ];
E: 25 28 [weight=4, ];
E: 26 27 [weight=2, ];
E: 26 28 [weight=4, ];
