N: 41 "DPath" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 37 "DPath_ind" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 5 "ap_pr1_path_sigma_dp" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 28 "dp_apD_V" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 7 "dp_apD_compose" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 8 "dp_apD_compose'" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 35 "dp_apD_const" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 34 "dp_apD_const'" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 29 "dp_apD_pp" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 33 "dp_concat" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 24 "dp_concat_1p" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 23 "dp_concat_Vp" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 31 "dp_concat_l" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 25 "dp_concat_p1" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 22 "dp_concat_pV" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 20 "dp_concat_p_pp" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 21 "dp_concat_pp_p" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 32 "dp_concat_r" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 26 "dp_const_V" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 27 "dp_const_pp" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 38 "dp_id" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 30 "dp_inverse" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 39 "dp_ishprop" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 3 "equiv_dp_arrow" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 9 "equiv_dp_compose" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 10 "equiv_dp_compose'" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 36 "equiv_dp_const" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 4 "equiv_dp_forall" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 2 "equiv_dp_forall_domain" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 14 "equiv_dp_paths_FFlr" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 16 "equiv_dp_paths_Fl" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 13 "equiv_dp_paths_FlFr" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 11 "equiv_dp_paths_FlFr_D" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 15 "equiv_dp_paths_Fr" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 19 "equiv_dp_paths_l" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 12 "equiv_dp_paths_lFFr" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 17 "equiv_dp_paths_lr" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 18 "equiv_dp_paths_r" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 1 "equiv_dp_sigma" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 6 "equiv_path_sigma_dp" [body=yes, kind=cnst, prop=no, path="DPath", ];
N: 40 "istrunc_dp" [body=yes, kind=cnst, prop=no, path="DPath", ];
E: 1 6 [weight=6, ];
E: 1 41 [weight=24, ];
E: 2 41 [weight=4, ];
E: 3 41 [weight=4, ];
E: 4 6 [weight=4, ];
E: 4 38 [weight=8, ];
E: 4 41 [weight=16, ];
E: 5 6 [weight=1, ];
E: 5 41 [weight=3, ];
E: 6 41 [weight=1, ];
E: 7 8 [weight=1, ];
E: 7 9 [weight=1, ];
E: 8 10 [weight=4, ];
E: 9 10 [weight=1, ];
E: 9 41 [weight=2, ];
E: 10 41 [weight=7, ];
E: 11 41 [weight=1, ];
E: 12 41 [weight=1, ];
E: 13 41 [weight=1, ];
E: 14 41 [weight=1, ];
E: 15 41 [weight=1, ];
E: 16 41 [weight=1, ];
E: 17 41 [weight=1, ];
E: 18 41 [weight=1, ];
E: 19 41 [weight=1, ];
E: 20 33 [weight=16, ];
E: 20 41 [weight=24, ];
E: 21 33 [weight=16, ];
E: 21 41 [weight=24, ];
E: 22 30 [weight=2, ];
E: 22 33 [weight=2, ];
E: 22 38 [weight=2, ];
E: 22 41 [weight=8, ];
E: 23 30 [weight=2, ];
E: 23 33 [weight=2, ];
E: 23 38 [weight=2, ];
E: 23 41 [weight=8, ];
E: 24 33 [weight=2, ];
E: 24 38 [weight=2, ];
E: 24 41 [weight=8, ];
E: 25 33 [weight=2, ];
E: 25 38 [weight=2, ];
E: 25 41 [weight=8, ];
E: 26 30 [weight=3, ];
E: 26 36 [weight=5, ];
E: 26 41 [weight=3, ];
E: 27 33 [weight=4, ];
E: 27 36 [weight=11, ];
E: 27 41 [weight=4, ];
E: 28 30 [weight=3, ];
E: 29 33 [weight=4, ];
E: 30 41 [weight=4, ];
E: 31 41 [weight=4, ];
E: 32 41 [weight=4, ];
E: 33 41 [weight=9, ];
E: 34 35 [weight=1, ];
E: 34 36 [weight=3, ];
E: 34 41 [weight=1, ];
E: 35 36 [weight=3, ];
E: 36 41 [weight=3, ];
E: 37 38 [weight=2, ];
E: 37 41 [weight=5, ];
E: 38 41 [weight=1, ];
E: 39 41 [weight=1, ];
E: 40 41 [weight=1, ];
